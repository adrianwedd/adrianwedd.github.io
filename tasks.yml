# jsonschema block
jsonschema: |
  {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "array",
    "items": {
      "type": "object",
      "required": ["id", "description", "dependencies", "priority", "status", "type"],
      "properties": {
        "id": { "type": "integer" },
        "description": { "type": "string" },
        "component": { "type": "string" },
        "dependencies": { "type": "array", "items": { "type": "integer" } },
        "priority": { "type": "integer", "minimum": 1, "maximum": 5 },
        "status": { "type": "string", "enum": ["pending", "in_progress", "done"] },
        "type": { "type": "string" },
        "command": { "type": ["string", "null"] },
        "task_id": { "type": "string" },
        "title": { "type": "string" },
        "area": { "type": "string" },
        "actionable_steps": { "type": "array", "items": { "type": "string" } },
        "acceptance_criteria": { "type": "array", "items": { "type": "string" } },
        "assigned_to": { "type": ["string", "null"] },
        "epic": { "type": "string" }
      }
    }
  }

# Array of tasks (phases) that conforms to the schema
phases:
  - id: 1
    title: 'Project & Architecture Ideation'
    description: 'Define the high-level goals, detailed architecture, and user stories for the Personal Intelligence Node.'
    component: 'Project Management'
    dependencies: []
    priority: 5
    status: done
    type: task
    command: null
    task_id: 'PIN-ID-1'
    area: Planning
    actionable_steps:
      - 'Create a detailed System Architecture Diagram showing data flow between scripts, content, and GitHub Actions.'
      - "Write user stories for each core feature (e.g., 'As an agent, I want to drop a file in the inbox so it can be automatically classified')."
      - 'Set up a GitHub Project board to track all subsequent tasks.'
    acceptance_criteria:
      - 'Architecture diagram is checked into the repository.'
      - 'User stories are documented in GitHub Issues.'
      - 'A project board is created and populated with initial tasks.'
    assigned_to: human-operator
    epic: 'Phase 1: Bootstrap'

  - id: 2
    title: 'Commit Scaffold'
    description: 'Create the initial repository structure and commit all the boilerplate files for the Astro project, including configs, layouts, and empty content directories.'
    component: 'Core Infrastructure'
    dependencies: [1]
    priority: 5
    status: done
    type: task
    command: "git init && git add . && git commit -m 'Initial commit: project scaffold'"
    task_id: 'PIN-BS-1'
    area: Setup
    actionable_steps:
      - 'Create the directory structure as defined in the plan.'
      - 'Create placeholder files like `astro.config.mjs`, `package.json`, etc.'
      - 'Initialize a git repository and commit all files.'
    acceptance_criteria:
      - 'The main branch contains the complete file and directory scaffold.'
    assigned_to: codex-agent
    epic: 'Phase 1: Bootstrap'

  - id: 3
    title: 'Configure GitHub Pages & CI'
    description: 'Set up the GitHub repository settings and the initial `deploy.yml` workflow to enable automated deployment to GitHub Pages.'
    component: 'CI/CD'
    dependencies: [2]
    priority: 5
    status: done
    type: task
    command: null
    task_id: 'PIN-CI-1'
    area: Deployment
    actionable_steps:
      - "Configure the repository's 'Pages' section to deploy from the `gh-pages` branch."
      - 'Commit the initial `deploy.yml` workflow file.'
    acceptance_criteria:
      - 'The GitHub Pages settings are correctly configured.'
      - 'A push to `main` triggers the deploy action successfully.'
    assigned_to: human-operator
    epic: 'Phase 1: Bootstrap'

  - id: 4
    title: 'Implement fetch-gh-repos.mjs'
    description: 'Develop the Node.js script that fetches repository metadata from the GitHub API and creates markdown files in the `content/tools` directory.'
    component: 'Automation Scripts'
    dependencies: [3]
    priority: 4
    status: done
    type: task
    command: 'node scripts/fetch-gh-repos.mjs'
    task_id: 'PIN-DEV-1'
    area: Development
    actionable_steps:
      - 'Write the script logic to call the GitHub API using `GH_TOKEN`.'
      - "Filter repositories based on a 'tool' topic."
      - 'Generate markdown files with frontmatter for each matched repo.'
    acceptance_criteria:
      - 'The script populates the `content/tools` directory with `.md` files.'
    assigned_to: codex-agent
    epic: 'Phase 2: Automation Hooks'

  - id: 5
    title: 'Unit Test Automation Scripts'
    description: 'Write unit tests for the automation scripts, starting with `fetch-gh-repos.mjs`, to ensure they are robust and handle edge cases.'
    component: 'Testing'
    dependencies: [4]
    priority: 4
    status: done
    type: task
    command: 'npm test'
    task_id: 'PIN-QA-1'
    area: QA
    actionable_steps:
      - 'Set up a testing framework like Vitest or Jest.'
      - 'Write unit tests for `fetch-gh-repos.mjs`, mocking the GitHub API response.'
      - 'Integrate the test command into the CI workflow.'
    acceptance_criteria:
      - 'Test coverage for the script is above 80%.'
      - 'The CI pipeline fails if tests do not pass.'
    assigned_to: codex-agent
    epic: 'Phase 2: Automation Hooks'

  - id: 6
    title: 'Implement classify-inbox.mjs'
    description: 'Write the script that processes files in `content/inbox`, calls an LLM to determine tags and section, and moves the files accordingly.'
    component: 'Automation Scripts'
    dependencies: [5]
    priority: 3
    status: done
    type: task
    command: 'node scripts/classify-inbox.mjs'
    task_id: 'PIN-DEV-2'
    area: Development
    actionable_steps:
      - 'Implement logic to read files from the inbox directory.'
      - 'Construct a robust prompt for the LLM to classify content.'
      - "Implement file moving logic based on the LLM's parsed response."
    acceptance_criteria:
      - 'The script successfully moves files from the inbox to categorized directories.'
    assigned_to: codex-agent
    epic: 'Phase 3: LLM Integration'

  - id: 7
    title: 'LLM Integration Testing'
    description: "Perform integration and QA testing on the classification script using a sample set of documents to validate the accuracy and reliability of the LLM's output."
    component: 'Testing'
    dependencies: [6]
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-QA-2'
    area: QA
    actionable_steps:
      - 'Create a test suite of 10-15 diverse documents in the `inbox`.'
      - 'Run the `classify-inbox.mjs` script manually.'
      - 'Review the classification results for accuracy.'
      - 'Fine-tune the prompt based on any classification errors.'
    acceptance_criteria:
      - 'Classification accuracy on the test suite is above 90%.'
      - 'The script correctly handles API errors and low-confidence fallbacks.'
    assigned_to: human-operator
    epic: 'Phase 3: LLM Integration'

  - id: 8
    title: 'Code Review Process'
    description: 'Establish and enforce a code review process for all new code, requiring at least one approval before merging to the main branch.'
    component: 'Project Management'
    dependencies: [3]
    priority: 4
    status: done
    type: task
    command: null
    task_id: 'PIN-CR-1'
    area: 'Code Review'
    actionable_steps:
      - 'Configure branch protection rules for the `main` branch on GitHub.'
      - 'Require status checks to pass before merging.'
      - 'Require at least one review from a team member or a designated reviewer-agent.'
    acceptance_criteria:
      - 'Pull requests cannot be merged to `main` without passing CI tests and getting one approval.'
    assigned_to: human-operator
    epic: 'Phase 4: Process Hardening & Agent Bus'

  - id: 9
    title: 'Implement Agent Bus'
    description: 'Develop the `agent-bus.mjs` script and define the agent manifest schema.'
    component: 'Automation Scripts'
    dependencies: [8]
    priority: 2
    status: done
    type: task
    command: 'node scripts/agent-bus.mjs'
    task_id: 'PIN-DEV-3'
    area: Development
    actionable_steps:
      - 'Finalize the YAML schema for agent manifests.'
      - 'Write the script to read all manifests and format them into a markdown summary.'
      - 'Implement the GitHub API call to create or update the `#agent-bus` issue.'
    acceptance_criteria:
      - 'The script successfully updates a GitHub Issue with the latest agent statuses.'
    assigned_to: codex-agent
    epic: 'Phase 4: Agent Bus'

  - id: 10
    title: 'Build Core UI Components'
    description: 'Develop the primary Astro components for rendering content, such as `ToolCard.astro` and `AgentDiagram.astro`.'
    component: 'UI/UX'
    dependencies: [3]
    priority: 3
    status: done
    type: task
    command: 'npm run dev'
    task_id: 'PIN-UI-1'
    area: Frontend
    actionable_steps:
      - 'Create `src/components/ToolCard.astro` to display tool info from frontmatter.'
      - 'Create `src/components/AgentDiagram.astro` to render Mermaid diagrams.'
      - 'Style components with placeholder Tailwind CSS.'
    acceptance_criteria:
      - 'Components render correctly when viewed in the Astro dev server.'
    assigned_to: codex-agent
    epic: 'Phase 5: UI Expansion'

  - id: 11
    title: 'End-to-End & UAT Testing'
    description: 'Perform end-to-end (E2E) testing of the full user flow, from an agent committing a file to the content appearing on the live site.'
    component: 'Testing'
    dependencies: [10, 7, 9]
    priority: 2
    status: done
    type: task
    command: null
    task_id: 'PIN-QA-3'
    area: QA
    actionable_steps:
      - 'Manually perform the full workflow: commit a file to `inbox`, push, wait for CI, check the live site.'
      - 'Verify that classification, insight generation, and the agent bus update all work as expected.'
      - 'Test the site on multiple browsers (Chrome, Firefox, Safari).'
      - 'Perform accessibility checks using browser dev tools (Lighthouse).'
    acceptance_criteria:
      - 'The E2E flow works without manual intervention.'
      - 'The site renders correctly on major browsers.'
      - 'Lighthouse accessibility score is above 90.'
    assigned_to: human-operator
    epic: 'Phase 5: UI Expansion'

  - id: 12
    title: 'Production Hardening & Documentation'
    description: 'Prepare the system for production use by adding security scans, comprehensive documentation, and robust monitoring.'
    component: 'Core Infrastructure'
    dependencies: [11]
    priority: 1
    status: done
    type: task
    command: null
    task_id: 'PIN-PROD-1'
    area: Production
    actionable_steps:
      - 'Add a security vulnerability scan (e.g., `npm audit`) to the CI pipeline.'
      - 'Set up monitoring for GitHub Actions to get alerts on failures.'
      - 'Write comprehensive README.md files for both developers and contributing agents.'
      - 'Create documentation for each automation script, explaining its purpose and environment variables.'
    acceptance_criteria:
      - 'CI pipeline includes a security audit step.'
      - 'The project has clear, detailed documentation for all its parts.'
      - 'A monitoring plan is in place for CI/CD failures.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 13
    title: 'Add Input Validation for LLM Response in classify-inbox.mjs'
    description: "The classify-inbox script assumes the LLM always returns valid JSON. Invalid responses currently move files to 'untagged' without any validation, which can hide failures. This task introduces schema checks so malformed API replies are detected and handled explicitly."
    component: 'Automation Scripts'
    dependencies: [6]
    priority: 4
    status: done
    type: task
    command: null
    task_id: 'PIN-ROBUST-1'
    area: Robustness
    actionable_steps:
      - "Wrap JSON.parse in a try-catch block and validate the parsed object contains 'section', 'tags', and 'confidence'."
      - "Ensure 'section' matches one of the allowed SECTIONS and 'confidence' is between 0 and 1."
      - 'If validation fails, log the issue and move the source file to `content/inbox/failed/` for manual review.'
    acceptance_criteria:
      - 'Script no longer crashes when the LLM returns invalid JSON.'
      - 'Files with malformed responses are quarantined and reported.'
    assigned_to: 'codex-agent'
    epic: 'Phase 4: Process Hardening & Agent Bus'

  - id: 14
    title: 'Unit Tests for classify-inbox.mjs'
    description: 'Increase test coverage for the classification logic, including the new validation behaviour.'
    component: 'Testing'
    dependencies: [13]
    priority: 4
    status: done
    type: task
    command: 'npm test'
    task_id: 'PIN-QA-4'
    area: Testing
    actionable_steps:
      - 'Create Vitest tests for buildPrompt and classifyFile with mocked OpenAI API responses.'
      - 'Test handling of both valid and invalid JSON replies and verify files are moved to the correct directories.'
      - 'Add coverage expectations for the new validation code.'
    acceptance_criteria:
      - 'Coverage for `classify-inbox.mjs` reaches 80% or higher.'
      - 'All tests pass in CI.'
    assigned_to: 'codex-agent'
    epic: 'Phase 4: Process Hardening & Agent Bus'

  - id: 15
    title: 'Refactor GitHub API logic into utils/github.mjs'
    description: 'fetch-gh-repos.mjs and agent-bus.mjs duplicate token handling and fetch logic. Consolidating this code will reduce bugs and simplify future enhancements.'
    component: 'Automation Scripts'
    dependencies: [4, 9]
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-REF-1'
    area: Maintainability
    actionable_steps:
      - 'Create `scripts/utils/github.mjs` exporting a `githubFetch` helper that applies headers and throws informative errors.'
      - 'Update `fetch-gh-repos.mjs` and `agent-bus.mjs` to use this helper.'
      - 'Add minimal tests for the new utility to verify header injection and error handling.'
    acceptance_criteria:
      - 'Both scripts operate as before using the shared utility.'
      - 'Repeated token/header code is removed from the individual scripts.'
    assigned_to: 'codex-agent'
    epic: 'Phase 4: Process Hardening & Agent Bus'

  - id: 16
    title: 'Unit Tests for agent-bus.mjs'
    description: 'Add tests to ensure agent-bus correctly loads manifests and interacts with the GitHub API after the refactor.'
    component: 'Testing'
    dependencies: [15]
    priority: 3
    status: done
    type: task
    command: 'npm test'
    task_id: 'PIN-QA-5'
    area: Testing
    actionable_steps:
      - 'Mock `fetch` and `fs` within Vitest to simulate manifest files and GitHub API responses.'
      - 'Test getIssueNumber, createIssue, and updateIssue logic.'
      - 'Verify manifestsToMarkdown produces the expected table format.'
    acceptance_criteria:
      - 'agent-bus.mjs reaches at least 80% test coverage.'
      - 'CI passes with the new tests.'
    assigned_to: 'codex-agent'
    epic: 'Phase 4: Process Hardening & Agent Bus'
  - id: 27
    title: 'Investigate and Fix Vitest Module Resolution for agent-bus.mjs'
    description: 'The unit tests for `agent-bus.mjs` are currently excluded from the test suite due to a module resolution error in Vitest. This task involves investigating the root cause of this error and implementing a fix to allow the `agent-bus.test.mjs` tests to run successfully.'
    component: 'Testing'
    dependencies: [16] # Depends on the tests being written (even if excluded)
    priority: 4
    status: done
    type: task
    command: 'npm test'
    task_id: 'PIN-QA-9'
    area: 'QA'
    actionable_steps:
      - 'Analyze Vitest configuration and module import/mocking strategy in `agent-bus.test.mjs`.'
      - 'Experiment with different Vitest configurations (e.g., `deps.interopDefault`, `resolve.alias`) or mocking techniques (e.g., `vi.doMock`).'
      - 'Consult Vitest documentation and community forums for similar issues.'
      - 'Implement a solution that allows `agent-bus.test.mjs` to run without errors.'
      - 'Re-enable `agent-bus.test.mjs` in `vitest.config.mjs`.'
    acceptance_criteria:
      - '`agent-bus.test.mjs` runs successfully in the test suite.'
      - 'The overall test coverage for `agent-bus.mjs` is reported correctly.'
      - 'The `exclude` entry for `agent-bus.test.mjs` is removed from `vitest.config.mjs`.'
    assigned_to: 'codex-agent'
    epic: 'Phase 4: Process Hardening & Agent Bus'

  - id: 17
    title: 'Restrict permissions in deploy workflow'
    description: 'The deploy.yml workflow currently runs with default token permissions. Tightening these permissions reduces blast radius if the token is compromised.'
    component: 'CI/CD'
    dependencies: [3]
    priority: 4
    status: done
    type: task
    command: null
    task_id: 'PIN-SEC-1'
    area: Security
    actionable_steps:
      - 'Add a `permissions` section to `.github/workflows/deploy.yml` granting only the scopes needed (e.g., `contents: read`, `pages: write`, `issues: write`).'
      - 'Verify the job still succeeds with the restricted permissions.'
    acceptance_criteria:
      - 'Workflow defines explicit minimal permissions and completes successfully.'
    assigned_to: 'codex-agent'
    epic: 'Phase 6: Iterative Growth'

  - id: 18
    title: 'Implement build-insights.mjs'
    description: 'The placeholder build-insights script should summarise new or changed markdown files using an LLM and generate `.insight.md` outputs.'
    component: 'Automation Scripts'
    dependencies: [6]
    priority: 3
    status: done
    type: task
    command: 'node scripts/build-insights.mjs'
    task_id: 'PIN-DEV-4'
    area: Development
    actionable_steps:
      - 'Detect recently added or modified markdown across `content/garden`, `logs`, and `mirror`.'
      - 'Use OpenAI (or configured LLM) to produce concise summaries with proper error handling.'
      - 'Write the summaries to corresponding `.insight.md` files.'
    acceptance_criteria:
      - 'Running the script generates insight files without crashing when the API fails.'
    assigned_to: 'codex-agent'
    epic: 'Phase 3: LLM Integration'

  - id: 19
    title: 'Integration tests for automation pipeline'
    description: 'Validate that all automation scripts work together by running them sequentially on sample data with mocked external APIs.'
    component: 'Testing'
    dependencies: [14, 16, 18]
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-QA-6'
    area: Testing
    actionable_steps:
      - 'Create fixtures under `test/fixtures` for inbox files and agent manifests.'
      - 'Mock GitHub and OpenAI APIs to avoid network calls.'
      - 'Run fetch-gh-repos, classify-inbox, build-insights, and agent-bus in a single test suite.'
    acceptance_criteria:
      - 'Integration tests pass in CI and verify expected file movements and issue updates.'
    assigned_to: 'codex-agent'
    epic: 'Phase 6: Iterative Growth'

  - id: 20
    title: 'Add Caching to GitHub Actions Workflow'
    description: 'The CI workflow reinstalls all Node.js dependencies on every run. Implementing caching for `node_modules` will significantly speed up the build and test process, saving time and resources.'
    component: 'CI/CD'
    dependencies: [3]
    priority: 2
    status: done
    type: task
    command: null
    task_id: 'PIN-OPT-1'
    area: Optimization
    actionable_steps:
      - 'Add a step using the `actions/setup-node@v4` action that includes caching for the package manager.'
      - 'Configure the cache key to use the `package-lock.json` hash to ensure the cache is invalidated when dependencies change.'
      - 'Verify that subsequent CI runs are faster dues to the cache hit.'
    acceptance_criteria:
      - 'The `deploy.yml` workflow includes a caching mechanism for npm dependencies.'
      - 'CI workflow execution time is demonstrably reduced on runs where dependencies have not changed.'
    assigned_to: 'codex-agent'
    epic: 'Phase 6: Iterative Growth'

  - id: 21
    title: 'Refactor Scripts to Only Process Changed Files'
    description: 'Scripts like `classify-inbox.mjs` and `build-insights.mjs` re-process all files in their target directories on every run. This is inefficient and will not scale. They should be refactored to only process files that have been added or changed in the latest push.'
    component: 'Automation Scripts'
    dependencies: [6, 18]
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-SCALE-1'
    area: Scalability
    actionable_steps:
      - 'In the `deploy.yml` workflow, use an action like `tj-actions/changed-files` to get a list of modified files.'
      - 'Pass the list of changed files as arguments to the `classify-inbox.mjs` and `build-insights.mjs` scripts.'
      - 'Update the scripts to accept a list of file paths as an argument and only process those files. If no arguments are provided, they should fall back to the current behavior.'
    acceptance_criteria:
      - 'Scripts only operate on the subset of files that were changed in a push.'
      - 'The cron-scheduled run continues to process all files as a full sweep.'
    assigned_to: 'codex-agent'
    epic: 'Phase 6: Iterative Growth'

  - id: 22
    title: 'Add YAML Linting and Schema Validation to CI'
    description: 'To prevent future syntax errors or schema violations in `tasks.yml`, this task adds an automated validation step to the CI pipeline.'
    component: 'CI/CD'
    dependencies: [3]
    priority: 5
    status: done
    type: task
    command: null
    task_id: 'PIN-QA-7'
    area: QA
    actionable_steps:
      - "Add a new 'Lint & Validate YAML' step to the `deploy.yml` workflow."
      - 'This step will use `yamllint` to check for basic syntax and style issues.'
      - 'It will then use a small Python script with `jsonschema` to validate that `tasks.yml` conforms to the schema defined in its `jsonschema` block.'
    acceptance_criteria:
      - 'The CI pipeline fails if `tasks.yml` has syntax errors or does not conform to its own schema.'
      - 'This provides an automated safety net against malformed task definitions.'
    assigned_to: 'codex-agent'
    epic: 'Phase 4: Process Hardening & Agent Bus'

  - id: 23
    title: Dynamically Discover Content Sections in classify-inbox.mjs
    description: The `classify-inbox.mjs` script uses a hardcoded array of section names. This means that if a new content directory (e.g., `content/projects/`) is added, the script must be manually updated. This task refactors the script to discover these sections dynamically by reading the directory structure, making the system more maintainable and extensible.
    component: Automation Scripts
    dependencies: [6]
    priority: 3
    status: done
    type: task
    command: null
    task_id: PIN-REF-2
    area: Maintainability
    actionable_steps:
      - In `classify-inbox.mjs`, replace the static `SECTIONS` array with a function that reads the directories in `content/`.
      - Filter out non-content directories like `inbox`, `untagged`, and any others that are not valid classification targets.
      - Pass the dynamically generated list of sections into the `buildPrompt` function.
    acceptance_criteria:
      - The script automatically uses any new directory added to `content/` as a valid classification target.
      - The hardcoded `SECTIONS` array is removed from the script.
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'
  - id: 24
    title: Unit Tests for build-insights.mjs
    description: The `build-insights.mjs` script, once implemented, will contain critical logic for summarizing content with an LLM. This task adds a dedicated unit test suite to ensure this logic is correct, handles errors, and can be refactored safely in the future.
    component: Testing
    dependencies: [18]
    priority: 4
    status: done
    type: task
    command: npm test
    task_id: PIN-QA-8
    area: Testing
    actionable_steps:
      - Create a new test file `test/build-insights.test.mjs`.
      - Mock the OpenAI API and `fs` modules to simulate reading content and receiving LLM summaries.
      - Write tests to verify that changed files are correctly identified and that insight files are generated with the expected content.
      - Test edge cases, such as API failures or empty content.
    acceptance_criteria:
      - Test coverage for `build-insights.mjs` reaches 80% or higher.
      - The new tests are integrated into the CI pipeline and pass successfully.
    assigned_to: codex-agent
    epic: 'Phase 3: LLM Integration'
  - id: 25
    title: Enable Dependabot for Automated Dependency Updates
    description: To improve security and maintainability, this task involves setting up Dependabot to automatically scan for outdated npm dependencies and create pull requests to update them. This ensures the project does not fall behind on important security patches and package updates.
    component: CI/CD
    dependencies: [3]
    priority: 3
    status: done
    type: task
    command: null
    task_id: PIN-SEC-2
    area: Security
    actionable_steps:
      - Create a `.github/dependabot.yml` configuration file.
      - Configure it to check the npm ecosystem on a weekly schedule.
      - Set it to target the `main` branch and assign a reviewer (e.g., `@adrianwedd`).
    acceptance_criteria:
      - A `dependabot.yml` file is present in the `.github` directory.
      - Dependabot is active and will create PRs for outdated dependencies.
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'
  - id: 26
    title: Configure Site URL in astro.config.mjs
    description: The `astro.config.mjs` file is missing the recommended `site` property. Setting this property is crucial for SEO, generating correct canonical URLs, and ensuring sitemaps are built correctly. This task adds the production URL to the configuration.
    component: Core Infrastructure
    dependencies: [2]
    priority: 4
    status: done
    type: task
    command: npm run build
    task_id: PIN-CFG-1
    area: Configuration
    actionable_steps:
      - Read the `CNAME` file to determine the production hostname.
      - Edit `astro.config.mjs` and add a `site` property to the exported configuration object.
      - The value should be the full URL, e.g., `https://github.adrianwedd.com`.
    acceptance_criteria:
      - The `astro.config.mjs` file contains a `site` property with the correct production URL.
      - The Astro build completes successfully with the new configuration.
    assigned_to: 'codex-agent'
    epic: 'Phase 1: Bootstrap'
  - id: 28
    title: 'Static Search Index'
    description: 'Generate a Lunr.js index for all markdown content and integrate a search component.'
    component: 'Front-End'
    dependencies: [5]
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-UI-3'
    area: UI
    actionable_steps:
      - 'Add Lunr.js dependency.'
      - 'Create build-search-index.mjs to output search-index.json.'
      - 'Integrate Search.astro component.'
    acceptance_criteria:
      - 'Script outputs `public/search-index.json`.'
      - 'Users can search without a backend.'
    assigned_to: codex-agent
    epic: 'Phase 5: UI Expansion'

  - id: 29
    title: 'RSS Feed Generation'
    description: 'Produce an RSS feed from markdown metadata for subscribers.'
    component: 'Automation'
    dependencies: [5]
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-AUTO-4'
    area: Deployment
    actionable_steps:
      - 'Create build-rss.mjs to output rss.xml.'
      - 'Add script invocation to deploy workflow before publishing.'
      - 'Link the feed in site navigation.'
    acceptance_criteria:
      - 'Workflow writes `public/rss-xml`.'
      - 'Site exposes an RSS link.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 30
    title: 'Add File System Error Handling to `fetch-gh-repos.mjs`'
    description: 'Enhance the robustness of `fetch-gh-repos.mjs` by adding `try...catch` blocks around file system operations (`fs.readdir`, `fs.mkdir`, `fs.writeFile`) to gracefully handle potential I/O errors.'
    component: 'Automation Scripts'
    dependencies: []
    priority: 4
    status: done
    type: task
    command: null
    task_id: 'PIN-ROBUST-2'
    area: Robustness
    actionable_steps:
      - 'Wrap `fs.readdir`, `fs.mkdir`, and `fs.writeFile` calls in `try...catch` blocks.'
      - 'Log errors using `console.error` or a new centralized logging utility.'
      - 'Consider appropriate fallback or exit strategies for critical errors.'
    acceptance_criteria:
      - 'File system operations in `fetch-gh-repos.mjs` are resilient to I/O errors.'
      - 'Errors are logged, providing clear diagnostic information.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 31
    title: 'Add File System Error Handling to `classify-inbox.mjs`'
    description: 'Improve the resilience of `classify-inbox.mjs` by implementing `try...catch` blocks around file system operations (`fs.readdir`, `fs.readFile`, `fs.mkdir`, `fs.rename`, `fs.writeFile`) to manage I/O errors effectively.'
    component: 'Automation Scripts'
    dependencies: []
    priority: 4
    status: done
    type: task
    command: null
    task_id: 'PIN-ROBUST-3'
    area: Robustness
    actionable_steps:
      - 'Wrap `fs.readdir`, `fs.readFile`, `fs.mkdir`, `fs.rename`, and `fs.writeFile` calls in `try...catch` blocks.'
      - 'Log errors using `console.error` or a new centralized logging utility.'
      - 'Ensure that file operations failing do not crash the script.'
    acceptance_criteria:
      - '`classify-inbox.mjs` handles file system errors gracefully.'
      - 'Errors are logged, and the script continues processing other files where possible.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 32
    title: 'Add File System Error Handling to `build-insights.mjs`'
    description: 'Enhance the robustness of `build-insights.mjs` by adding `try...catch` blocks around file system operations (`fs.readdir`, `fs.readFile`, `fs.writeFile`) to handle I/O errors.'
    component: 'Automation Scripts'
    dependencies: []
    priority: 4
    status: done
    type: task
    command: null
    task_id: 'PIN-ROBUST-4'
    area: Robustness
    actionable_steps:
      - 'Wrap `fs.readdir`, `fs.readFile`, and `fs.writeFile` calls in `try...catch` blocks.'
      - 'Log errors using `console.error` or a new centralized logging utility.'
      - 'Ensure that file operations failing do not prevent other insights from being built.'
    acceptance_criteria:
      - '`build-insights.mjs` is resilient to file system errors.'
      - 'Errors are logged, and the script attempts to process other files.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 33
    title: 'Add File System Error Handling to `agent-bus.mjs`'
    description: 'Improve the reliability of `agent-bus.mjs` by adding `try...catch` blocks around file system operations (`fs.readdir`, `fs.readFile`) to handle potential I/O errors.'
    component: 'Automation Scripts'
    dependencies: []
    priority: 4
    status: done
    type: task
    command: null
    task_id: 'PIN-ROBUST-5'
    area: Robustness
    actionable_steps:
      - 'Wrap `fs.readdir` and `fs.readFile` calls in `try...catch` blocks.'
      - 'Log errors using `console.error` or a new centralized logging utility.'
      - 'Ensure the script can still attempt to update the GitHub Issue even if some manifest files are unreadable.'
    acceptance_criteria:
      - '`agent-bus.mjs` handles file system errors gracefully.'
      - 'Errors are logged, and the script attempts to process other manifests.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 34
    title: 'Implement Centralized Logging Utility'
    description: 'Create a shared utility module for centralized logging across all Node.js automation scripts, allowing for consistent error reporting and easier debugging.'
    component: 'Core Infrastructure'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-MAINT-1'
    area: Maintainability
    actionable_steps:
      - 'Create `scripts/utils/logger.mjs`.'
      - 'Implement functions for different log levels (e.g., `log.info`, `log.warn`, `log.error`).'
      - 'Replace existing `console.log` and `console.error` calls in automation scripts with the new logging utility.'
    acceptance_criteria:
      - 'A `logger.mjs` utility exists and is used by all automation scripts.'
      - 'Log messages are consistently formatted.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 35
    title: 'Create Shared File System Utility Module'
    description: 'Extract common file system operations (`fs.readdir`, `fs.readFile`, `fs.writeFile`, `fs.mkdir`, `fs.rename`) into a shared utility module to reduce code duplication and improve maintainability across automation scripts.'
    component: 'Automation Scripts'
    dependencies: [30, 31, 32, 33, 34]
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-REF-3'
    area: Refactoring
    actionable_steps:
      - 'Create `scripts/utils/file-utils.mjs`.'
      - 'Move common `fs` operations into functions within `file-utils.mjs`, incorporating error handling and logging.'
      - 'Update `fetch-gh-repos.mjs`, `classify-inbox.mjs`, `build-insights.mjs`, and `agent-bus.mjs` to use the new utility.'
    acceptance_criteria:
      - '`file-utils.mjs` exists and is used by all relevant scripts.'
      - 'Code duplication for file system operations is significantly reduced.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 36
    title: 'Refactor LLM API Calls into Dedicated Utility'
    description: "Consolidate LLM API interaction logic (currently in `classify-inbox.mjs`'s `callOpenAI` function) into a dedicated `llm-api.mjs` utility to prepare for potential future LLM integrations and improve modularity."
    component: 'Automation Scripts'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-REF-4'
    area: Refactoring
    actionable_steps:
      - 'Create `scripts/utils/llm-api.mjs`.'
      - "Move `callOpenAI` (and potentially `buildSummaryPrompt` if it's generic enough) into `llm-api.mjs`."
      - 'Update `classify-inbox.mjs` and `build-insights.mjs` to import and use the new utility.'
    acceptance_criteria:
      - '`llm-api.mjs` exists and encapsulates LLM API logic.'
      - 'Scripts use the new utility for LLM interactions.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 37
    title: 'Improve Readability of Markdown Table Generation in `agent-bus.mjs`'
    description: 'Refactor the `manifestsToMarkdown` function in `agent-bus.mjs` to improve the readability of the markdown table header generation, potentially using template literals or an array join.'
    component: 'Automation Scripts'
    dependencies: []
    priority: 2
    status: done
    type: task
    command: null
    task_id: 'PIN-MAINT-2'
    area: Maintainability
    actionable_steps:
      - 'Modify the `md` variable assignment in `manifestsToMarkdown` to use a more readable string construction method.'
    acceptance_criteria:
      - 'The markdown table header generation is clearer and easier to understand.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 38
    title: 'Increase Unit Test Coverage for `agent-bus.mjs`'
    description: 'Write additional unit tests for `agent-bus.mjs` to improve its test coverage, focusing on edge cases and ensuring all functions are adequately tested.'
    component: 'Testing'
    dependencies: [27]
    priority: 4
    status: done
    type: task
    command: null
    task_id: 'PIN-QA-10'
    area: Testing
    actionable_steps:
      - 'Analyze current coverage report for `agent-bus.mjs`.'
      - 'Write new tests to cover uncovered lines, branches, and functions.'
      - 'Ensure mocks are comprehensive for GitHub API and file system interactions.'
    acceptance_criteria:
      - 'Test coverage for `agent-bus.mjs` reaches at least 80%.'
      - 'All new tests pass.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 39
    title: 'Increase Unit Test Coverage for `build-insights.mjs`'
    description: 'Write additional unit tests for `build-insights.mjs` to improve its test coverage, focusing on edge cases and ensuring all functions are adequately tested.'
    component: 'Testing'
    dependencies: [24]
    priority: 4
    status: done
    type: task
    command: null
    task_id: 'PIN-QA-11'
    area: Testing
    actionable_steps:
      - 'Analyze current coverage report for `build-insights.mjs`.'
      - 'Write new tests to cover uncovered lines, branches, and functions.'
      - 'Ensure mocks are comprehensive for LLM API and file system interactions.'
    acceptance_criteria:
      - 'Test coverage for `build-insights.mjs` reaches at least 80%.'
      - 'All new tests pass.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 40
    title: 'Increase Unit Test Coverage for `classify-inbox.mjs`'
    description: 'Write additional unit tests for `classify-inbox.mjs` to improve its test coverage, focusing on edge cases and ensuring all functions are adequately tested.'
    component: 'Testing'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-QA-12'
    area: Testing
    actionable_steps:
      - 'Analyze current coverage report for `classify-inbox.mjs`.'
      - 'Write new tests to cover uncovered lines, branches, and functions.'
      - 'Ensure mocks are comprehensive for LLM API and file system interactions.'
    acceptance_criteria:
      - 'Test coverage for `classify-inbox.mjs` reaches at least 90%.'
      - 'All new tests pass.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 41
    title: 'Increase Unit Test Coverage for `fetch-gh-repos.mjs`'
    description: 'Write additional unit tests for `fetch-gh-repos.mjs` to improve its test coverage, focusing on edge cases and ensuring all functions are adequately tested.'
    component: 'Testing'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-QA-13'
    area: Testing
    actionable_steps:
      - 'Analyze current coverage report for `fetch-gh-repos.mjs`.'
      - 'Write new tests to cover uncovered lines, branches, and functions.'
      - 'Ensure mocks are comprehensive for GitHub API and file system interactions.'
    acceptance_criteria:
      - 'Test coverage for `fetch-gh-repos.mjs` reaches at least 90%.'
      - 'All new tests pass.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 42
    title: 'Expand Integration Tests to Cover Error Scenarios'
    description: 'Enhance the existing integration test suite (`test/integration.test.mjs`) to include scenarios where external API calls (GitHub, LLM) fail or return unexpected data, ensuring the pipeline handles these gracefully.'
    component: 'Testing'
    dependencies: [19]
    priority: 4
    status: done
    type: task
    command: null
    task_id: 'PIN-QA-14'
    area: Testing
    actionable_steps:
      - 'Add test cases to `test/integration.test.mjs` that mock failed GitHub API responses.'
      - 'Add test cases that mock failed LLM API responses or malformed LLM output.'
      - 'Verify that the pipeline logs errors and handles them without crashing.'
    acceptance_criteria:
      - 'Integration tests cover various error conditions for external dependencies.'
      - 'The pipeline demonstrates resilience to external service failures.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 43
    title: 'Implement Content Sanitization for Markdown Files'
    description: 'Add a sanitization step for markdown content, especially files processed by LLMs, to prevent potential injection attacks if the content is rendered directly on the static site without proper escaping.'
    component: 'Security'
    dependencies: []
    priority: 5
    status: done
    type: task
    command: null
    task_id: 'PIN-SEC-3'
    area: Security
    actionable_steps:
      - 'Identify appropriate sanitization library (e.g., `dompurify` if used in browser, or a server-side markdown sanitizer).'
      - 'Integrate the sanitization step into `classify-inbox.mjs` or `build-insights.mjs` before content is written to the `content/` directory.'
      - 'Consider adding a sanitization step to the Astro build process if content is directly embedded.'
    acceptance_criteria:
      - 'Markdown content is sanitized to remove potentially malicious scripts or tags.'
      - 'The static site remains secure against content injection.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 44
    title: 'Add Detailed Code Comments for Complex Logic'
    description: 'Review all Node.js automation scripts and add more detailed code comments, especially for complex functions, non-obvious logic, or areas that might be difficult for new contributors to understand.'
    component: 'Documentation'
    dependencies: []
    priority: 2
    status: done
    type: task
    command: null
    task_id: 'PIN-DOC-1'
    area: Documentation
    actionable_steps:
      - 'Go through each function in `scripts/*.mjs` and `scripts/utils/*.mjs`.'
      - 'Add comments explaining the purpose, parameters, and return values of functions.'
      - 'Explain any complex algorithms or design decisions.'
    acceptance_criteria:
      - 'Automation scripts are well-commented, improving code readability and maintainability.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 45
    title: 'Create `CONTRIBUTING.md` Guide'
    description: 'Develop a `CONTRIBUTING.md` guide to provide clear instructions for new developers or AI agents on how to contribute to the project, including setup, coding standards, testing, and pull request guidelines.'
    component: 'Documentation'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: 'add CONTRIBUTING.md'
    task_id: 'PIN-DOC-2'
    area: Documentation
    actionable_steps:
      - 'Create `CONTRIBUTING.md` in the root directory.'
      - 'Include sections on: project setup, running tests, linting/formatting, adding new features, submitting pull requests.'
      - 'Reference existing documentation (`README.md`, `PLAN.md`, `AGENTS.md`).'
    acceptance_criteria:
      - 'A comprehensive `CONTRIBUTING.md` file exists.'
      - 'New contributors can easily understand how to get started and contribute.'
    assigned_to: human-operator
    epic: 'Phase 6: Iterative Growth'

  - id: 46
    title: 'Investigate build-insights.mjs Test Failures'
    description: 'Investigate and fix the intermittent test failures for `build-insights.mjs`.'
    component: 'Testing'
    dependencies: [32]
    priority: 5
    status: done
    type: task
    command: 'npm test'
    task_id: 'PIN-QA-15'
    area: QA
    actionable_steps:
      - 'Analyze test logs and code to identify root cause of failures.'
      - 'Reproduce failures consistently.'
      - 'Implement fixes in test or source code.'
      - 'Ensure 100% test pass rate for `build-insights.mjs`.'
    acceptance_criteria:
      - 'All tests for `build-insights.mjs` pass consistently.'
      - 'Test coverage for `build-insights.mjs` is maintained or improved.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'
  - id: 47
    title: 'Implement DNS Verification for Agents'
    description: 'Provide agents with the ability to verify DNS records to confirm their custom domain configurations.'
    component: 'Automation Scripts'
    dependencies: [15]
    priority: 3
    status: done
    type: task
    command: 'node scripts/verify-dns.mjs'
    task_id: 'PIN-VERIFY-1'
    area: 'Verification'
    actionable_steps:
      - 'Create a new script `scripts/verify-dns.mjs` that takes a domain as input.'
      - 'The script should use a library or shell out to `dig` to check for `A` and `CNAME` records.'
      - 'The script should output whether the DNS records are correctly configured for GitHub Pages.'
    acceptance_criteria:
      - 'Agents can run the script to verify their custom domain settings.'
      - 'The script provides clear success or failure messages.'
    assigned_to: 'codex-agent'
    epic: 'Phase 6: Iterative Growth'

  - id: 48
    title: 'Debug and Fix Workflow Errors'
    description: 'Systematically identify and resolve errors occurring in the GitHub Actions workflow to ensure reliable and successful builds and deployments.'
    component: 'CI/CD'
    dependencies: [3]
    priority: 5
    status: in_progress
    type: task
    command: null
    task_id: 'PIN-DEBUG-1'
    area: 'Debugging'
    actionable_steps:
      - 'Analyze workflow logs from failed runs to identify specific error messages and failing steps.'
      - 'Replicate failures locally where possible by running the scripts with the same inputs and environment variables.'
      - 'Add more detailed logging to scripts to trace execution flow and variable states.'
      - 'Improve check-dns.mjs to log when the CNAME file is missing.'
      - 'Create isolated test cases that specifically target the failing conditions.'
      - 'Incrementally apply fixes and re-run the workflow to verify the solution.'
    acceptance_criteria:
      - 'The `deploy.yml` workflow completes successfully without errors.'
      - 'Root causes of previous failures are identified and documented.'
      - 'The system is more robust against similar future failures.'
    assigned_to: 'codex-agent'
    epic: 'Phase 7: Debugging and Stability'

  - id: 49
    title: 'Enhance Script Error Handling and Reporting'
    description: 'Improve error handling within all automation scripts to provide clearer, more actionable error messages and prevent silent failures.'
    component: 'Automation Scripts'
    dependencies: [30, 31, 32, 33]
    priority: 4
    status: done
    type: task
    command: null
    task_id: 'PIN-ROBUST-6'
    area: 'Robustness'
    actionable_steps:
      - 'Review all `try...catch` blocks in the automation scripts.'
      - 'Ensure that caught errors are logged with sufficient context (e.g., file path, API endpoint).'
      - 'Implement a consistent error logging format across all scripts, potentially using a centralized logger.'
      - 'For critical errors, ensure the script exits with a non-zero status code to fail the CI step explicitly.'
    acceptance_criteria:
      - 'Script failures produce clear, informative log output in the CI.'
      - 'Silent failures are eliminated.'
      - 'It is easier to diagnose the cause of a script failure from the workflow logs.'
    assigned_to: 'codex-agent'
    epic: 'Phase 7: Debugging and Stability'

  - id: 50
    title: 'Create a Debugging Guide for Agents'
    description: 'Develop a `DEBUGGING.md` document that provides a step-by-step guide for agents (and humans) to diagnose and fix common issues with the automation pipeline.'
    component: 'Documentation'
    dependencies: [48]
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-DOC-3'
    area: 'Documentation'
    actionable_steps:
      - 'Create a `DEBUGGING.md` file in the `docs/` directory.'
      - 'Document common failure scenarios (e.g., API key errors, file not found, LLM response malformed).'
      - 'Provide instructions on how to read workflow logs and identify the failing script.'
      - 'Include steps for running scripts locally to reproduce issues.'
      - 'Link to this guide from the main `README.md`.'
    acceptance_criteria:
      - 'A clear and concise debugging guide is available to all contributors.'
      - 'The time to diagnose and resolve common issues is reduced.'
    assigned_to: 'human-operator'
    epic: 'Phase 7: Debugging and Stability'

  - id: 54
    title: 'Comprehensive Dependency Audit'
    description: 'Perform a comprehensive audit of all npm dependencies to identify any known vulnerabilities. This goes beyond a simple `npm audit` and should involve checking each dependency against vulnerability databases.'
    component: 'Security'
    dependencies: [25]
    priority: 5
    status: done
    type: task
    command: null
    task_id: 'PIN-SEC-4'
    area: 'Security'
    actionable_steps:
      - 'Use a tool like Snyk or Dependabot to scan the project for vulnerabilities.'
      - 'Review the results and create a plan to address any high-priority vulnerabilities.'
      - 'Update the `package.json` file with the patched versions of the dependencies.'
    acceptance_criteria:
      - 'A comprehensive vulnerability scan has been performed.'
      - 'A plan to address any identified vulnerabilities has been created.'
    assigned_to: 'codex-agent'
    epic: 'Phase 7: Debugging and Stability'

  - id: 55
    title: 'Implement a File Locking Mechanism'
    description: 'Implement a file locking mechanism in `classify-inbox.mjs` to prevent race conditions when multiple instances of the script are running simultaneously. This can be achieved by creating a lock file before processing a file and deleting it afterward.'
    component: 'Automation Scripts'
    dependencies: [6]
    priority: 4
    status: done
    type: task
    command: null
    task_id: 'PIN-ROBUST-7'
    area: 'Robustness'
    actionable_steps:
      - 'In `classify-inbox.mjs`, before processing a file, check for the existence of a corresponding `.lock` file.'
      - 'If a lock file exists, skip the file.'
      - 'If no lock file exists, create one.'
      - 'After the file has been processed, delete the lock file.'
    acceptance_criteria:
      - 'The script no longer has the potential for race conditions when processing files.'
    assigned_to: 'codex-agent'
    epic: 'Phase 7: Debugging and Stability'

  - id: 56
    title: 'Add a Dead-Letter Queue for Insights'
    description: 'In `build-insights.mjs`, if the LLM fails to generate a summary, move the original file to a `content/insights-failed` directory for manual review and reprocessing.'
    component: 'Automation Scripts'
    dependencies: [18]
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-ROBUST-8'
    area: 'Robustness'
    actionable_steps:
      - 'In `build-insights.mjs`, if the `callOpenAI` function throws an error, move the original file to a `content/insights-failed` directory.'
      - 'Log the error with the path to the failed file.'
    acceptance_criteria:
      - 'Failed insight generations are handled gracefully.'
      - 'The original file is preserved for manual review and reprocessing.'
    assigned_to: 'codex-agent'
    epic: 'Phase 7: Debugging and Stability'

  - id: 57
    title: 'Enhance the `CONTRIBUTING.md` Guide'
    description: "Enhance the `CONTRIBUTING.md` guide with more detailed information on the project's branching strategy, commit message format, and code style guidelines."
    component: 'Documentation'
    dependencies: [45]
    priority: 2
    status: done
    type: task
    command: null
    task_id: 'PIN-DOC-4'
    area: 'Documentation'
    actionable_steps:
      - 'Add a section on the branching strategy (e.g., GitFlow).'
      - 'Add a section on the preferred commit message format (e.g., Conventional Commits).'
      - 'Add a section on the code style guidelines, with examples.'
    acceptance_criteria:
      - 'The `CONTRIBUTING.md` guide is more comprehensive and provides clearer instructions for new contributors.'
    assigned_to: 'human-operator'
    epic: 'Phase 6: Iterative Growth'

  - id: 58
    title: 'Implement Performance Testing for Automation Scripts'
    description: 'Implement performance testing for the automation scripts to identify and address any bottlenecks. This will involve creating a large number of test files and measuring the execution time of the scripts.'
    component: 'Testing'
    dependencies: [19]
    priority: 2
    status: done
    type: task
    command: null
    task_id: 'PIN-QA-16'
    area: 'Testing'
    actionable_steps:
      - 'Create a script to generate a large number of test files (e.g., 1000+).'
      - 'Run the automation scripts against the test files and measure the execution time.'
      - 'Identify any bottlenecks and create a plan to address them.'
    acceptance_criteria:
      - 'The performance of the automation scripts has been measured and any bottlenecks have been identified.'
    assigned_to: 'codex-agent'
    epic: 'Phase 6: Iterative Growth'

  - id: 59
    title: 'Fix `classify-inbox.mjs` Race Condition'
    description: 'Refactor the file processing logic in `classify-inbox.mjs` to make it atomic. Instead of modifying the file in the inbox, the script should write the new content (with tags) directly to the destination directory and then delete the original file from the inbox.'
    component: 'Automation Scripts'
    dependencies: [6]
    priority: 5
    status: done
    type: task
    command: null
    task_id: 'PIN-BUG-1'
    area: 'Bugs'
    actionable_steps:
      - 'In `classify-inbox.mjs`, when a file is successfully classified and needs tags, read the content from the source file in the inbox.'
      - 'Construct the new content with the tags.'
      - 'Write the new content to the destination path in the target directory (e.g., `content/garden/file.md`).'
      - 'If the write is successful, delete the original file from the inbox.'
    acceptance_criteria:
      - 'Files are no longer modified in the inbox directory.'
      - 'The file processing logic is atomic and resilient to failures.'
    assigned_to: 'codex-agent'
    epic: 'Phase 7: Debugging and Stability'

  - id: 60
    title: 'Add Rate Limiting and Retry Logic to API Calls'
    description: 'Implement a retry mechanism with exponential backoff for all external API calls (GitHub, OpenAI) to handle rate limiting and transient network errors gracefully.'
    component: 'Core Infrastructure'
    dependencies: [15, 36]
    priority: 4
    status: done
    type: task
    command: null
    task_id: 'PIN-ROBUST-9'
    area: 'Robustness'
    actionable_steps:
      - 'Create a new utility function `retryFetch` that wraps the `fetch` call.'
      - 'The `retryFetch` function should accept the number of retries and a backoff strategy.'
      - 'Update `github.mjs` and `llm-api.mjs` to use this new utility for all API calls.'
      - 'Log a warning on each retry attempt.'
    acceptance_criteria:
      - 'The scripts can withstand intermittent network failures and API rate limiting.'
    assigned_to: 'codex-agent'
    epic: 'Phase 7: Debugging and Stability'

  - id: 61
    title: 'Use Streaming for Large File Processing'
    description: 'Refactor the file reading logic in `classify-inbox.mjs` and `build-insights.mjs` to use streams instead of reading the entire file into memory. This will improve performance and prevent memory issues when dealing with large files.'
    component: 'Automation Scripts'
    dependencies: [6, 18]
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-SCALE-2'
    area: 'Scalability'
    actionable_steps:
      - 'Replace `fs.readFile` with `fs.createReadStream` in the scripts.'
      - 'Pipe the stream to the appropriate processing function.'
      - 'Ensure that the LLM API calls are still handled correctly with the streamed content.'
    acceptance_criteria:
      - 'The scripts can process large files without consuming excessive memory.'
    assigned_to: 'codex-agent'
    epic: 'Phase 6: Iterative Growth'

  - id: 62
    title: 'Isolate Integration Test Data'
    description: 'Refactor the integration test suite to ensure that each test has its own isolated set of mock data. This will prevent tests from interfering with each other and make them more reliable.'
    component: 'Testing'
    dependencies: [19]
    priority: 4
    status: done
    type: task
    command: null
    task_id: 'PIN-QA-17'
    area: 'Testing'
    actionable_steps:
      - 'In `test/integration.test.mjs`, create a separate mock data object for each test case.'
      - 'Ensure that the `beforeEach` hook resets all mocks to a clean state before each test.'
    acceptance_criteria:
      - 'The integration tests are fully isolated and can be run in any order.'
    assigned_to: 'codex-agent'
    epic: 'Phase 6: Iterative Growth'

  - id: 63
    title: 'Update and Complete Script Documentation'
    description: 'Update the `docs/scripts/README.md` file to include documentation for `build-search-index.mjs` and `build-rss.mjs`. Also, add details on default values for optional environment variables to all script documentation.'
    component: 'Documentation'
    dependencies: [12]
    priority: 2
    status: done
    type: task
    command: null
    task_id: 'PIN-DOC-5'
    area: 'Documentation'
    actionable_steps:
      - 'Add entries for `build-search-index.mjs` and `build-rss.mjs` to the table in `docs/scripts/README.md`.'
      - 'Create `docs/scripts/build-search-index.md` and `docs/scripts/build-rss.md`.'
      - "In each script's documentation, add a section for environment variables that lists the default values for optional variables."
    acceptance_criteria:
      - 'All automation scripts are fully documented.'
      - 'The documentation is consistent and up-to-date.'
    assigned_to: 'codex-agent'
    epic: 'Phase 6: Iterative Growth'

  - id: 64
    title: 'Enforce Conventional Commits with Husky'
    description: 'Add a commit-msg hook using Husky and commitlint to ensure all commit messages follow the Conventional Commits specification.'
    component: 'CI/CD'
    dependencies: [57]
    priority: 2
    status: done
    type: task
    command: null
    task_id: 'PIN-TOOL-1'
    area: 'Tooling'
    actionable_steps:
      - 'Install husky and commitlint as dev dependencies.'
      - 'Create a commitlint config extending @commitlint/config-conventional.'
      - 'Add a commit-msg hook that runs commitlint.'
    acceptance_criteria:
      - 'Commit messages not following the convention are rejected.'
    assigned_to: 'codex-agent'
    epic: 'Phase 6: Iterative Growth'
  # tasks 65-114 from detailed code reviews
  - id: 65
    title: 'Formalize Agent Interaction Model'
    description: 'Expand AGENTS.md with a detailed specification for agent contributions, including expected metadata and file naming.'
    component: 'Documentation'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-65'
    area: 'Architecture'
    actionable_steps:
      - 'Document required frontmatter fields and naming conventions.'
    acceptance_criteria:
      - 'AGENTS.md includes a formal interaction model.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 66
    title: 'Evaluate readFileStream vs readFile'
    description: 'Standardize file reading utilities by assessing whether readFileStream is needed for large files.'
    component: 'Automation Scripts'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-66'
    area: 'Optimization'
    actionable_steps:
      - 'Review current usage of readFileStream and replace with readFile if appropriate.'
    acceptance_criteria:
      - 'Utilities use the simplest viable file reading method.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 67
    title: 'Refine tasks.yml structure'
    description: 'Add a type field to tasks.yml entries for better categorization.'
    component: 'Project Management'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-67'
    area: 'Process'
    actionable_steps:
      - 'Update JSON schema and existing tasks with a type property.'
    acceptance_criteria:
      - 'tasks.yml validates with the new schema including type.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 68
    title: 'Enable and Fix Integration Tests'
    description: 'Activate the integration test suite and resolve failing cases.'
    component: 'Testing'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-68'
    area: 'Testing'
    actionable_steps:
      - 'Uncomment integration tests in vitest config.'
      - 'Ensure all scripts work together in tests.'
    acceptance_criteria:
      - 'Integration tests run and pass.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 69
    title: 'Enhance Test Coverage for Edge Cases'
    description: 'Add tests for unusual filenames and malformed YAML to improve robustness.'
    component: 'Testing'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-69'
    area: 'Testing'
    actionable_steps:
      - 'Create additional unit tests for classify-inbox and agent-bus.'
    acceptance_criteria:
      - 'Edge cases are covered by unit tests.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 70
    title: 'Test the retryFetch Utility'
    description: 'Create tests verifying retry logic and success conditions.'
    component: 'Testing'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-70'
    area: 'Testing'
    actionable_steps:
      - 'Add a new test file for retryFetch.mjs.'
    acceptance_criteria:
      - 'retryFetch utility is fully tested.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 71
    title: 'Update Husky Configuration'
    description: 'Remove deprecated lines from husky.sh to prepare for Husky v10.'
    component: 'Tooling'
    dependencies: []
    priority: 2
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-71'
    area: 'CI/CD'
    actionable_steps:
      - 'Edit husky.sh as recommended.'
    acceptance_criteria:
      - 'No deprecation warning when running husky.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 72
    title: 'Refine deploy workflow efficiency'
    description: 'Only rebuild RSS and search index when content changes.'
    component: 'CI/CD'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-72'
    area: 'Optimization'
    actionable_steps:
      - 'Detect content changes in deploy.yml before running build scripts.'
    acceptance_criteria:
      - 'CI only rebuilds when necessary.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 73
    title: 'Remove OSSAR file duplication'
    description: 'Configure ESLint to lint .mjs files directly and drop JS copies.'
    component: 'CI/CD'
    dependencies: []
    priority: 2
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-73'
    area: 'Tooling'
    actionable_steps:
      - 'Update ossar-analysis.yml to lint mjs without duplication.'
    acceptance_criteria:
      - 'Workflow no longer duplicates files.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 74
    title: 'Centralize Constants'
    description: 'Create scripts/utils/constants.mjs for shared string literals.'
    component: 'Code Quality'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-74'
    area: 'Maintainability'
    actionable_steps:
      - 'Refactor scripts to import common constants.'
    acceptance_criteria:
      - 'No repeated directory strings across scripts.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 75
    title: 'Improve Markdown Generation Readability'
    description: 'Refactor agent-bus.mjs to build markdown tables using array join for clarity.'
    component: 'Code Quality'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-75'
    area: 'Maintainability'
    actionable_steps:
      - 'Rewrite string concatenation using array of lines and join.'
    acceptance_criteria:
      - 'Markdown generation code is easier to read.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 76
    title: 'Add JSDoc Comments to Utilities'
    description: 'Document functions in scripts/utils with JSDoc for better maintenance.'
    component: 'Documentation'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-76'
    area: 'Maintainability'
    actionable_steps:
      - 'Add JSDoc comments to exported functions.'
    acceptance_criteria:
      - 'Utilities have clear JSDoc documentation.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 77
    title: 'Update docs/scripts README'
    description: 'Add entries for build-search-index.mjs and build-rss.mjs to documentation.'
    component: 'Documentation'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-77'
    area: 'Documentation'
    actionable_steps:
      - 'Edit docs/scripts/README.md to include missing scripts.'
    acceptance_criteria:
      - 'README lists all automation scripts.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 78
    title: 'Create CONTRIBUTING guide'
    description: 'Provide setup and PR instructions in a CONTRIBUTING.md file.'
    component: 'Documentation'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-78'
    area: 'Community'
    actionable_steps:
      - 'Write CONTRIBUTING.md with setup, testing and PR steps.'
    acceptance_criteria:
      - 'Repository includes CONTRIBUTING.md at root.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 79
    title: 'Add Known Issues Document'
    description: 'Track ongoing challenges in docs/KNOWN_ISSUES.md.'
    component: 'Documentation'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-79'
    area: 'Documentation'
    actionable_steps:
      - 'Create docs/KNOWN_ISSUES.md summarizing technical hurdles.'
    acceptance_criteria:
      - 'Known issues file exists and is referenced in README.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 80
    title: 'Use Safe YAML Parsing'
    description: 'Replace yaml.load with yaml.safeLoad in agent-bus.mjs.'
    component: 'Security'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-80'
    area: 'Security'
    actionable_steps:
      - 'Update agent-bus.mjs to use safe YAML parsing.'
    acceptance_criteria:
      - 'YAML parsing cannot execute arbitrary code.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 81
    title: 'Harden External Links'
    description: 'Add rel attributes to external link configuration in astro.config.mjs.'
    component: 'Security'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-81'
    area: 'Security'
    actionable_steps:
      - 'Configure rehype-external-links with rel noopener noreferrer nofollow.'
    acceptance_criteria:
      - 'Generated HTML uses secure external link attributes.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 82
    title: 'Audit Workflow Permissions'
    description: 'Review GitHub Actions for least privilege and adjust where possible.'
    component: 'CI/CD'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-82'
    area: 'Security'
    actionable_steps:
      - 'Check each workflow file for required permissions only.'
    acceptance_criteria:
      - 'Workflows specify minimal necessary permissions.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 83
    title: 'Parallelize File Processing'
    description: 'Process files concurrently in build-insights and classify-inbox.'
    component: 'Performance'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-83'
    area: 'Optimization'
    actionable_steps:
      - 'Use Promise.all to handle per-file operations.'
    acceptance_criteria:
      - 'Scripts handle multiple files in parallel.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 84
    title: 'Implement Image Optimization Pipeline'
    description: 'Optimize images using Astro image tools or similar.'
    component: 'Performance'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-84'
    area: 'Optimization'
    actionable_steps:
      - 'Integrate image optimization library into build.'
    acceptance_criteria:
      - 'Images served are optimized formats.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 85
    title: 'Create Frontmatter Type Definition'
    description: 'Define a typed schema for frontmatter using Astro content collections or TypeScript.'
    component: 'Architecture'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-85'
    area: 'Type Safety'
    actionable_steps:
      - 'Implement a frontmatter schema in src/content/config.ts.'
    acceptance_criteria:
      - 'Build validates frontmatter against the schema.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 86
    title: 'Refine Error Handling with Context'
    description: 'Log file paths when errors occur in build scripts.'
    component: 'Robustness'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-86'
    area: 'Debugging'
    actionable_steps:
      - 'Update build-insights.mjs to log the file that fails.'
    acceptance_criteria:
      - 'Error logs include contextual information.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 87
    title: 'Prune Unused Dependencies'
    description: 'Remove @astrojs/rss from package.json as it is not used.'
    component: 'Dependency Management'
    dependencies: []
    priority: 2
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-87'
    area: 'Tooling'
    actionable_steps:
      - 'Run npm uninstall @astrojs/rss and update lockfile.'
    acceptance_criteria:
      - 'package.json no longer lists unused packages.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 88
    title: 'Enforce pnpm via preinstall script'
    description: 'Use only-allow to ensure contributors install dependencies with pnpm.'
    component: 'Tooling'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-88'
    area: 'Consistency'
    actionable_steps:
      - 'Add preinstall script to package.json.'
    acceptance_criteria:
      - 'Running npm install with another package manager fails.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 89
    title: 'Pin Critical Dependency Versions'
    description: 'Lock versions for astro, vitest and eslint to avoid unexpected upgrades.'
    component: 'Dependency Management'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-89'
    area: 'Stability'
    actionable_steps:
      - 'Remove caret ranges from critical dependencies.'
    acceptance_criteria:
      - 'Version bumps are explicit and manual.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 90
    title: 'Stricter TypeScript Configuration'
    description: 'Enable noUnusedLocals, noUnusedParameters and exactOptionalPropertyTypes.'
    component: 'Type Safety'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-90'
    area: 'Code Quality'
    actionable_steps:
      - 'Update tsconfig.json with additional strict flags.'
    acceptance_criteria:
      - 'tsc reports unused variables and stricter checks.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 91
    title: 'Centralize Path Aliases'
    description: 'Create a shared paths.js for Astro, Vitest and TypeScript configs.'
    component: 'Developer Experience'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-91'
    area: 'Maintainability'
    actionable_steps:
      - 'Export alias object and import it into all config files.'
    acceptance_criteria:
      - 'Path aliases are consistent across tools.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 92
    title: 'Add Skip to Content Link'
    description: 'Improve accessibility in Layout.astro with a skip link.'
    component: 'Accessibility'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-92'
    area: 'A11y'
    actionable_steps:
      - 'Add focusable skip to content link styled as sr-only.'
    acceptance_criteria:
      - 'Keyboard users can skip navigation.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 93
    title: 'Use Semantic Article Tags'
    description: 'Wrap post content in <article> elements in posts pages.'
    component: 'Accessibility'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-93'
    area: 'A11y'
    actionable_steps:
      - 'Update src/pages/posts/[...slug].astro to use article tag.'
    acceptance_criteria:
      - 'Posts are semantically marked as articles.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 94
    title: 'Create Issue and PR Templates'
    description: 'Add GitHub templates to standardize contributions.'
    component: 'Community'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-94'
    area: 'Community'
    actionable_steps:
      - 'Add .github/PULL_REQUEST_TEMPLATE.md and ISSUE_TEMPLATE.'
    acceptance_criteria:
      - 'Repository provides templates for contributors.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 95
    title: 'Formalize Agent Manifest Schema'
    description: 'Convert agent-manifest-schema.yml into a JSON Schema and validate manifests.'
    component: 'Architecture'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-95'
    area: 'Scalability'
    actionable_steps:
      - 'Create JSON Schema file and integrate validation in agent-bus.'
    acceptance_criteria:
      - 'Agent manifests are validated automatically.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 96
    title: 'Define Agent Interaction Protocol'
    description: 'Specify status reporting, content requirements and idempotency in AGENTS.md.'
    component: 'Documentation'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-96'
    area: 'Architecture'
    actionable_steps:
      - 'Document protocol including status.json and required fields.'
    acceptance_criteria:
      - 'Agents can follow the protocol unambiguously.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 97
    title: 'Cache LLM API Calls'
    description: 'Store results keyed by file hash to avoid redundant API calls.'
    component: 'Performance'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-97'
    area: 'Optimization'
    actionable_steps:
      - 'Implement simple file hash cache for LLM results.'
    acceptance_criteria:
      - 'Repeated runs skip unchanged files without new API calls.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 98
    title: 'Streamlined Search Indexing'
    description: 'Refactor build-search-index.mjs to use streams for large collections.'
    component: 'Performance'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-98'
    area: 'Scalability'
    actionable_steps:
      - 'Process content files one by one and stream output.'
    acceptance_criteria:
      - 'Search index build memory usage stays low.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 99
    title: 'Implement Granular Log Levels'
    description: 'Expand logger.mjs to support DEBUG, INFO, WARN and ERROR levels.'
    component: 'Robustness'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-99'
    area: 'Debugging'
    actionable_steps:
      - 'Add LOG_LEVEL env variable control.'
    acceptance_criteria:
      - 'Scripts output adjustable verbosity.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 100
    title: 'Add Dry Run Mode'
    description: 'Allow destructive scripts to log actions without executing when --dry-run flag is used.'
    component: 'Robustness'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-100'
    area: 'Debugging'
    actionable_steps:
      - 'Implement command line option parsing for dry runs.'
    acceptance_criteria:
      - 'Scripts can simulate changes safely.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 101
    title: 'Parallelize Workflow Jobs'
    description: 'Run independent build steps concurrently in deploy.yml.'
    component: 'CI/CD'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-101'
    area: 'Optimization'
    actionable_steps:
      - 'Refactor deploy workflow using job matrix or parallel steps.'
    acceptance_criteria:
      - 'Workflow duration decreases due to parallel execution.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 102
    title: 'Content Correction Workflow'
    description: 'Create a manual GitHub workflow to fix miscategorized content.'
    component: 'CI/CD'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-102'
    area: 'Maintenance'
    actionable_steps:
      - 'Provide workflow_dispatch to move a file and re-run selective scripts.'
    acceptance_criteria:
      - 'Content corrections can be triggered without full deploy.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 103
    title: 'Triaging Classification Results'
    description: 'Update classify-inbox to return confidence scores and reasoning.'
    component: 'AI Logic'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-103'
    area: 'AI'
    actionable_steps:
      - 'Modify prompt and handle review-needed cases based on confidence.'
    acceptance_criteria:
      - 'Ambiguous files are moved to review-needed with reasoning.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 104
    title: 'Context-Aware Insight Generation'
    description: 'Tailor LLM prompts based on document category.'
    component: 'AI Logic'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-104'
    area: 'AI'
    actionable_steps:
      - 'Select specialized prompt templates per content type.'
    acceptance_criteria:
      - 'Insights reflect context of the source document.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 105
    title: 'Define and Enforce Content Schema'
    description: 'Use Astro Content Collections to ensure all content types have explicit frontmatter.'
    component: 'Architecture'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-105'
    area: 'Data'
    actionable_steps:
      - 'Create collection schemas for each content directory.'
    acceptance_criteria:
      - 'Build fails when content does not match schema.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 106
    title: 'Introduce Content Lifecycle'
    description: 'Add status fields to frontmatter and update scripts to respect draft, published and archived states.'
    component: 'Architecture'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-106'
    area: 'Data'
    actionable_steps:
      - 'Implement status field and update RSS and search index logic.'
    acceptance_criteria:
      - 'Only published content appears on the site.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 107
    title: 'Test Prompt Construction'
    description: 'Assert that mocked LLM calls receive the correct prompt strings.'
    component: 'Testing'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-107'
    area: 'Testing'
    actionable_steps:
      - 'Capture arguments to callLlm mock and verify contents.'
    acceptance_criteria:
      - 'Tests fail if prompt templates change unexpectedly.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 108
    title: 'Implement End-to-End Testing'
    description: 'Run the full build in a temp directory and verify generated output.'
    component: 'Testing'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-108'
    area: 'Testing'
    actionable_steps:
      - 'Use execa to run pnpm build during tests.'
    acceptance_criteria:
      - 'E2E test validates site generation.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 109
    title: 'Property-Based Tests for Sanitization'
    description: 'Use fast-check to test sanitize-markdown against many inputs.'
    component: 'Testing'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-109'
    area: 'Security'
    actionable_steps:
      - 'Create fast-check properties ensuring scripts remove scripts tags.'
    acceptance_criteria:
      - 'Property-based tests pass for sanitize-markdown.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 110
    title: 'Establish Tailwind Design System'
    description: 'Define custom theme tokens in tailwind.config.cjs.'
    component: 'Frontend'
    dependencies: []
    priority: 3
    status: done
    type: task
    command: null
    task_id: 'PIN-NEW-110'
    area: 'UI'
    actionable_steps:
      - 'Add color palette and typography scale to Tailwind config.'
    acceptance_criteria:
      - 'Styles use the defined design tokens.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 111
    title: 'Separate DNS Check Workflow'
    description: 'Move check-dns.mjs to a scheduled GitHub Action instead of build step.'
    component: 'CI/CD'
    dependencies: []
    priority: 3
    status: pending
    type: task
    command: null
    task_id: 'PIN-NEW-111'
    area: 'Operations'
    actionable_steps:
      - 'Create a cron workflow that runs check-dns.mjs hourly.'
    acceptance_criteria:
      - 'Main deploy workflow no longer fails due to DNS issues.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 112
    title: 'Document Current Architecture'
    description: 'Create docs/ARCHITECTURE.md describing the implemented system.'
    component: 'Documentation'
    dependencies: []
    priority: 3
    status: pending
    type: task
    command: null
    task_id: 'PIN-NEW-112'
    area: 'Documentation'
    actionable_steps:
      - 'Write architecture document separate from PLAN.md.'
    acceptance_criteria:
      - 'ARCHITECTURE.md reflects current implementation.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 113
    title: 'Improve README Quick Start'
    description: 'Add concise setup steps for running the project locally.'
    component: 'Documentation'
    dependencies: []
    priority: 3
    status: pending
    type: task
    command: null
    task_id: 'PIN-NEW-113'
    area: 'Documentation'
    actionable_steps:
      - 'Add getting-started section with install and dev commands.'
    acceptance_criteria:
      - 'New contributors can start within five minutes.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

  - id: 114
    title: 'Address Miscellaneous Nitpicks'
    description: 'Standardize variable names and consider rewriting Python script in Node.'
    component: 'Refactoring'
    dependencies: []
    priority: 3
    status: pending
    type: task
    command: null
    task_id: 'PIN-NEW-114'
    area: 'Cleanup'
    actionable_steps:
      - 'Normalize naming conventions and port validate-tasks.py to JS.'
    acceptance_criteria:
      - 'Codebase is consistent and Python dependency removed.'
    assigned_to: 'codex-agent'
    epic: 'Phase 8: Review Tasks'

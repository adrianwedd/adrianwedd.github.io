# jsonschema block
jsonschema: |
  {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "array",
    "items": {
      "type": "object",
      "required": ["id", "description", "dependencies", "priority", "status"],
      "properties": {
        "id": { "type": "integer" },
        "description": { "type": "string" },
        "component": { "type": "string" },
        "dependencies": { "type": "array", "items": { "type": "integer" } },
        "priority": { "type": "integer", "minimum": 1, "maximum": 5 },
        "status": { "type": "string", "enum": ["pending", "in_progress", "done"] },
        "command": { "type": ["string", "null"] },
        "task_id": { "type": "string" },
        "title": { "type": "string" },
        "area": { "type": "string" },
        "actionable_steps": { "type": "array", "items": { "type": "string" } },
        "acceptance_criteria": { "type": "array", "items": { "type": "string" } },
        "assigned_to": { "type": ["string", "null"] },
        "epic": { "type": "string" }
      }
    }
  }

# Array of tasks (phases) that conforms to the schema
phases:
  - id: 1
    title: 'Project & Architecture Ideation'
    description: 'Define the high-level goals, detailed architecture, and user stories for the Personal Intelligence Node.'
    component: 'Project Management'
    dependencies: []
    priority: 5
    status: done
    command: null
    task_id: 'PIN-ID-1'
    area: Planning
    actionable_steps:
      - 'Create a detailed System Architecture Diagram showing data flow between scripts, content, and GitHub Actions.'
      - "Write user stories for each core feature (e.g., 'As an agent, I want to drop a file in the inbox so it can be automatically classified')."
      - 'Set up a GitHub Project board to track all subsequent tasks.'
    acceptance_criteria:
      - 'Architecture diagram is checked into the repository.'
      - 'User stories are documented in GitHub Issues.'
      - 'A project board is created and populated with initial tasks.'
    assigned_to: human-operator
    epic: 'Phase 1: Bootstrap'

  - id: 2
    title: 'Commit Scaffold'
    description: 'Create the initial repository structure and commit all the boilerplate files for the Astro project, including configs, layouts, and empty content directories.'
    component: 'Core Infrastructure'
    dependencies: [1]
    priority: 5
    status: done
    command: "git init && git add . && git commit -m 'Initial commit: project scaffold'"
    task_id: 'PIN-BS-1'
    area: Setup
    actionable_steps:
      - 'Create the directory structure as defined in the plan.'
      - 'Create placeholder files like `astro.config.mjs`, `package.json`, etc.'
      - 'Initialize a git repository and commit all files.'
    acceptance_criteria:
      - 'The main branch contains the complete file and directory scaffold.'
    assigned_to: codex-agent
    epic: 'Phase 1: Bootstrap'

  - id: 3
    title: 'Configure GitHub Pages & CI'
    description: 'Set up the GitHub repository settings and the initial `deploy.yml` workflow to enable automated deployment to GitHub Pages.'
    component: 'CI/CD'
    dependencies: [2]
    priority: 5
    status: done
    command: null
    task_id: 'PIN-CI-1'
    area: Deployment
    actionable_steps:
      - "Configure the repository's 'Pages' section to deploy from the `gh-pages` branch."
      - 'Commit the initial `deploy.yml` workflow file.'
    acceptance_criteria:
      - 'The GitHub Pages settings are correctly configured.'
      - 'A push to `main` triggers the deploy action successfully.'
    assigned_to: human-operator
    epic: 'Phase 1: Bootstrap'

  - id: 4
    title: 'Implement fetch-gh-repos.mjs'
    description: 'Develop the Node.js script that fetches repository metadata from the GitHub API and creates markdown files in the `content/tools` directory.'
    component: 'Automation Scripts'
    dependencies: [3]
    priority: 4
    status: done
    command: 'node scripts/fetch-gh-repos.mjs'
    task_id: 'PIN-DEV-1'
    area: Development
    actionable_steps:
      - 'Write the script logic to call the GitHub API using `GH_TOKEN`.'
      - "Filter repositories based on a 'tool' topic."
      - 'Generate markdown files with frontmatter for each matched repo.'
    acceptance_criteria:
      - 'The script populates the `content/tools` directory with `.md` files.'
    assigned_to: codex-agent
    epic: 'Phase 2: Automation Hooks'

  - id: 5
    title: 'Unit Test Automation Scripts'
    description: 'Write unit tests for the automation scripts, starting with `fetch-gh-repos.mjs`, to ensure they are robust and handle edge cases.'
    component: 'Testing'
    dependencies: [4]
    priority: 4
    status: done
    command: 'npm test'
    task_id: 'PIN-QA-1'
    area: QA
    actionable_steps:
      - 'Set up a testing framework like Vitest or Jest.'
      - 'Write unit tests for `fetch-gh-repos.mjs`, mocking the GitHub API response.'
      - 'Integrate the test command into the CI workflow.'
    acceptance_criteria:
      - 'Test coverage for the script is above 80%.'
      - 'The CI pipeline fails if tests do not pass.'
    assigned_to: codex-agent
    epic: 'Phase 2: Automation Hooks'

  - id: 6
    title: 'Implement classify-inbox.mjs'
    description: 'Write the script that processes files in `content/inbox`, calls an LLM to determine tags and section, and moves the files accordingly.'
    component: 'Automation Scripts'
    dependencies: [5]
    priority: 3
    status: done
    command: 'node scripts/classify-inbox.mjs'
    task_id: 'PIN-DEV-2'
    area: Development
    actionable_steps:
      - 'Implement logic to read files from the inbox directory.'
      - 'Construct a robust prompt for the LLM to classify content.'
      - "Implement file moving logic based on the LLM's parsed response."
    acceptance_criteria:
      - 'The script successfully moves files from the inbox to categorized directories.'
    assigned_to: codex-agent
    epic: 'Phase 3: LLM Integration'

  - id: 7
    title: 'LLM Integration Testing'
    description: "Perform integration and QA testing on the classification script using a sample set of documents to validate the accuracy and reliability of the LLM's output."
    component: 'Testing'
    dependencies: [6]
    priority: 3
    status: done
    command: null
    task_id: 'PIN-QA-2'
    area: QA
    actionable_steps:
      - 'Create a test suite of 10-15 diverse documents in the `inbox`.'
      - 'Run the `classify-inbox.mjs` script manually.'
      - 'Review the classification results for accuracy.'
      - 'Fine-tune the prompt based on any classification errors.'
    acceptance_criteria:
      - 'Classification accuracy on the test suite is above 90%.'
      - 'The script correctly handles API errors and low-confidence fallbacks.'
    assigned_to: human-operator
    epic: 'Phase 3: LLM Integration'

  - id: 8
    title: 'Code Review Process'
    description: 'Establish and enforce a code review process for all new code, requiring at least one approval before merging to the main branch.'
    component: 'Project Management'
    dependencies: [3]
    priority: 4
    status: done
    command: null
    task_id: 'PIN-CR-1'
    area: 'Code Review'
    actionable_steps:
      - 'Configure branch protection rules for the `main` branch on GitHub.'
      - 'Require status checks to pass before merging.'
      - 'Require at least one review from a team member or a designated reviewer-agent.'
    acceptance_criteria:
      - 'Pull requests cannot be merged to `main` without passing CI tests and getting one approval.'
    assigned_to: human-operator
    epic: 'Phase 4: Process Hardening & Agent Bus'

  - id: 9
    title: 'Implement Agent Bus'
    description: 'Develop the `agent-bus.mjs` script and define the agent manifest schema.'
    component: 'Automation Scripts'
    dependencies: [8]
    priority: 2
    status: done
    command: 'node scripts/agent-bus.mjs'
    task_id: 'PIN-DEV-3'
    area: Development
    actionable_steps:
      - 'Finalize the YAML schema for agent manifests.'
      - 'Write the script to read all manifests and format them into a markdown summary.'
      - 'Implement the GitHub API call to create or update the `#agent-bus` issue.'
    acceptance_criteria:
      - 'The script successfully updates a GitHub Issue with the latest agent statuses.'
    assigned_to: codex-agent
    epic: 'Phase 4: Agent Bus'

  - id: 10
    title: 'Build Core UI Components'
    description: 'Develop the primary Astro components for rendering content, such as `ToolCard.astro` and `AgentDiagram.astro`.'
    component: 'UI/UX'
    dependencies: [3]
    priority: 3
    status: done
    command: 'npm run dev'
    task_id: 'PIN-UI-1'
    area: Frontend
    actionable_steps:
      - 'Create `src/components/ToolCard.astro` to display tool info from frontmatter.'
      - 'Create `src/components/AgentDiagram.astro` to render Mermaid diagrams.'
      - 'Style components with placeholder Tailwind CSS.'
    acceptance_criteria:
      - 'Components render correctly when viewed in the Astro dev server.'
    assigned_to: codex-agent
    epic: 'Phase 5: UI Expansion'

  - id: 11
    title: 'End-to-End & UAT Testing'
    description: 'Perform end-to-end (E2E) testing of the full user flow, from an agent committing a file to the content appearing on the live site.'
    component: 'Testing'
    dependencies: [10, 7, 9]
    priority: 2
    status: pending
    command: null
    task_id: 'PIN-QA-3'
    area: QA
    actionable_steps:
      - 'Manually perform the full workflow: commit a file to `inbox`, push, wait for CI, check the live site.'
      - 'Verify that classification, insight generation, and the agent bus update all work as expected.'
      - 'Test the site on multiple browsers (Chrome, Firefox, Safari).'
      - 'Perform accessibility checks using browser dev tools (Lighthouse).'
    acceptance_criteria:
      - 'The E2E flow works without manual intervention.'
      - 'The site renders correctly on major browsers.'
      - 'Lighthouse accessibility score is above 90.'
    assigned_to: human-operator
    epic: 'Phase 5: UI Expansion'

  - id: 12
    title: 'Production Hardening & Documentation'
    description: 'Prepare the system for production use by adding security scans, comprehensive documentation, and robust monitoring.'
    component: 'Core Infrastructure'
    dependencies: [11]
    priority: 1
    status: done
    command: null
    task_id: 'PIN-PROD-1'
    area: Production
    actionable_steps:
      - 'Add a security vulnerability scan (e.g., `npm audit`) to the CI pipeline.'
      - 'Set up monitoring for GitHub Actions to get alerts on failures.'
      - 'Write comprehensive README.md files for both developers and contributing agents.'
      - 'Create documentation for each automation script, explaining its purpose and environment variables.'
    acceptance_criteria:
      - 'CI pipeline includes a security audit step.'
      - 'The project has clear, detailed documentation for all its parts.'
      - 'A monitoring plan is in place for CI/CD failures.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 13
    title: 'Add Input Validation for LLM Response in classify-inbox.mjs'
    description: "The classify-inbox script assumes the LLM always returns valid JSON. Invalid responses currently move files to 'untagged' without any validation, which can hide failures. This task introduces schema checks so malformed API replies are detected and handled explicitly."
    component: 'Automation Scripts'
    dependencies: [6]
    priority: 4
    status: done
    command: null
    task_id: 'PIN-ROBUST-1'
    area: Robustness
    actionable_steps:
      - "Wrap JSON.parse in a try-catch block and validate the parsed object contains 'section', 'tags', and 'confidence'."
      - "Ensure 'section' matches one of the allowed SECTIONS and 'confidence' is between 0 and 1."
      - 'If validation fails, log the issue and move the source file to `content/inbox/failed/` for manual review.'
    acceptance_criteria:
      - 'Script no longer crashes when the LLM returns invalid JSON.'
      - 'Files with malformed responses are quarantined and reported.'
    assigned_to: 'codex-agent'
    epic: 'Phase 4: Process Hardening & Agent Bus'

  - id: 14
    title: 'Unit Tests for classify-inbox.mjs'
    description: 'Increase test coverage for the classification logic, including the new validation behaviour.'
    component: 'Testing'
    dependencies: [13]
    priority: 4
    status: done
    command: 'npm test'
    task_id: 'PIN-QA-4'
    area: Testing
    actionable_steps:
      - 'Create Vitest tests for buildPrompt and classifyFile with mocked OpenAI API responses.'
      - 'Test handling of both valid and invalid JSON replies and verify files are moved to the correct directories.'
      - 'Add coverage expectations for the new validation code.'
    acceptance_criteria:
      - 'Coverage for `classify-inbox.mjs` reaches 80% or higher.'
      - 'All tests pass in CI.'
    assigned_to: 'codex-agent'
    epic: 'Phase 4: Process Hardening & Agent Bus'

  - id: 15
    title: 'Refactor GitHub API logic into utils/github.mjs'
    description: 'fetch-gh-repos.mjs and agent-bus.mjs duplicate token handling and fetch logic. Consolidating this code will reduce bugs and simplify future enhancements.'
    component: 'Automation Scripts'
    dependencies: [4, 9]
    priority: 3
    status: done
    command: null
    task_id: 'PIN-REF-1'
    area: Maintainability
    actionable_steps:
      - 'Create `scripts/utils/github.mjs` exporting a `githubFetch` helper that applies headers and throws informative errors.'
      - 'Update `fetch-gh-repos.mjs` and `agent-bus.mjs` to use this helper.'
      - 'Add minimal tests for the new utility to verify header injection and error handling.'
    acceptance_criteria:
      - 'Both scripts operate as before using the shared utility.'
      - 'Repeated token/header code is removed from the individual scripts.'
    assigned_to: 'codex-agent'
    epic: 'Phase 4: Process Hardening & Agent Bus'

  - id: 16
    title: 'Unit Tests for agent-bus.mjs'
    description: 'Add tests to ensure agent-bus correctly loads manifests and interacts with the GitHub API after the refactor.'
    component: 'Testing'
    dependencies: [15]
    priority: 3
    status: done
    command: 'npm test'
    task_id: 'PIN-QA-5'
    area: Testing
    actionable_steps:
      - 'Mock `fetch` and `fs` within Vitest to simulate manifest files and GitHub API responses.'
      - 'Test getIssueNumber, createIssue, and updateIssue logic.'
      - 'Verify manifestsToMarkdown produces the expected table format.'
    acceptance_criteria:
      - 'agent-bus.mjs reaches at least 80% test coverage.'
      - 'CI passes with the new tests.'
    assigned_to: 'codex-agent'
    epic: 'Phase 4: Process Hardening & Agent Bus'
  - id: 27
    title: 'Investigate and Fix Vitest Module Resolution for agent-bus.mjs'
    description: 'The unit tests for `agent-bus.mjs` are currently excluded from the test suite due to a module resolution error in Vitest. This task involves investigating the root cause of this error and implementing a fix to allow the `agent-bus.test.mjs` tests to run successfully.'
    component: 'Testing'
    dependencies: [16] # Depends on the tests being written (even if excluded)
    priority: 4
    status: done
    command: 'npm test'
    task_id: 'PIN-QA-9'
    area: 'QA'
    actionable_steps:
      - 'Analyze Vitest configuration and module import/mocking strategy in `agent-bus.test.mjs`.'
      - 'Experiment with different Vitest configurations (e.g., `deps.interopDefault`, `resolve.alias`) or mocking techniques (e.g., `vi.doMock`).'
      - 'Consult Vitest documentation and community forums for similar issues.'
      - 'Implement a solution that allows `agent-bus.test.mjs` to run without errors.'
      - 'Re-enable `agent-bus.test.mjs` in `vitest.config.mjs`.'
    acceptance_criteria:
      - '`agent-bus.test.mjs` runs successfully in the test suite.'
      - 'The overall test coverage for `agent-bus.mjs` is reported correctly.'
      - 'The `exclude` entry for `agent-bus.test.mjs` is removed from `vitest.config.mjs`.'
    assigned_to: 'codex-agent'
    epic: 'Phase 4: Process Hardening & Agent Bus'

  - id: 17
    title: 'Restrict permissions in deploy workflow'
    description: 'The deploy.yml workflow currently runs with default token permissions. Tightening these permissions reduces blast radius if the token is compromised.'
    component: 'CI/CD'
    dependencies: [3]
    priority: 4
    status: done
    command: null
    task_id: 'PIN-SEC-1'
    area: Security
    actionable_steps:
      - 'Add a `permissions` section to `.github/workflows/deploy.yml` granting only the scopes needed (e.g., `contents: read`, `pages: write`, `issues: write`).'
      - 'Verify the job still succeeds with the restricted permissions.'
    acceptance_criteria:
      - 'Workflow defines explicit minimal permissions and completes successfully.'
    assigned_to: 'codex-agent'
    epic: 'Phase 6: Iterative Growth'

  - id: 18
    title: 'Implement build-insights.mjs'
    description: 'The placeholder build-insights script should summarise new or changed markdown files using an LLM and generate `.insight.md` outputs.'
    component: 'Automation Scripts'
    dependencies: [6]
    priority: 3
    status: done
    command: 'node scripts/build-insights.mjs'
    task_id: 'PIN-DEV-4'
    area: Development
    actionable_steps:
      - 'Detect recently added or modified markdown across `content/garden`, `logs`, and `mirror`.'
      - 'Use OpenAI (or configured LLM) to produce concise summaries with proper error handling.'
      - 'Write the summaries to corresponding `.insight.md` files.'
    acceptance_criteria:
      - 'Running the script generates insight files without crashing when the API fails.'
    assigned_to: 'codex-agent'
    epic: 'Phase 3: LLM Integration'

  - id: 19
    title: 'Integration tests for automation pipeline'
    description: 'Validate that all automation scripts work together by running them sequentially on sample data with mocked external APIs.'
    component: 'Testing'
    dependencies: [14, 16, 18]
    priority: 3
    status: done
    command: null
    task_id: 'PIN-QA-6'
    area: Testing
    actionable_steps:
      - 'Create fixtures under `test/fixtures` for inbox files and agent manifests.'
      - 'Mock GitHub and OpenAI APIs to avoid network calls.'
      - 'Run fetch-gh-repos, classify-inbox, build-insights, and agent-bus in a single test suite.'
    acceptance_criteria:
      - 'Integration tests pass in CI and verify expected file movements and issue updates.'
    assigned_to: 'codex-agent'
    epic: 'Phase 6: Iterative Growth'

  - id: 20
    title: 'Add Caching to GitHub Actions Workflow'
    description: 'The CI workflow reinstalls all Node.js dependencies on every run. Implementing caching for `node_modules` will significantly speed up the build and test process, saving time and resources.'
    component: 'CI/CD'
    dependencies: [3]
    priority: 2
    status: done
    command: null
    task_id: 'PIN-OPT-1'
    area: Optimization
    actionable_steps:
      - 'Add a step using the `actions/setup-node@v4` action that includes caching for the package manager.'
      - 'Configure the cache key to use the `package-lock.json` hash to ensure the cache is invalidated when dependencies change.'
      - 'Verify that subsequent CI runs are faster dues to the cache hit.'
    acceptance_criteria:
      - 'The `deploy.yml` workflow includes a caching mechanism for npm dependencies.'
      - 'CI workflow execution time is demonstrably reduced on runs where dependencies have not changed.'
    assigned_to: 'codex-agent'
    epic: 'Phase 6: Iterative Growth'

  - id: 21
    title: 'Refactor Scripts to Only Process Changed Files'
    description: 'Scripts like `classify-inbox.mjs` and `build-insights.mjs` re-process all files in their target directories on every run. This is inefficient and will not scale. They should be refactored to only process files that have been added or changed in the latest push.'
    component: 'Automation Scripts'
    dependencies: [6, 18]
    priority: 3
    status: done
    command: null
    task_id: 'PIN-SCALE-1'
    area: Scalability
    actionable_steps:
      - 'In the `deploy.yml` workflow, use an action like `tj-actions/changed-files` to get a list of modified files.'
      - 'Pass the list of changed files as arguments to the `classify-inbox.mjs` and `build-insights.mjs` scripts.'
      - 'Update the scripts to accept a list of file paths as an argument and only process those files. If no arguments are provided, they should fall back to the current behavior.'
    acceptance_criteria:
      - 'Scripts only operate on the subset of files that were changed in a push.'
      - 'The cron-scheduled run continues to process all files as a full sweep.'
    assigned_to: 'codex-agent'
    epic: 'Phase 6: Iterative Growth'

  - id: 22
    title: 'Add YAML Linting and Schema Validation to CI'
    description: 'To prevent future syntax errors or schema violations in `tasks.yml`, this task adds an automated validation step to the CI pipeline.'
    component: 'CI/CD'
    dependencies: [3]
    priority: 5
    status: done
    command: null
    task_id: 'PIN-QA-7'
    area: QA
    actionable_steps:
      - "Add a new 'Lint & Validate YAML' step to the `deploy.yml` workflow."
      - 'This step will use `yamllint` to check for basic syntax and style issues.'
      - 'It will then use a small Python script with `jsonschema` to validate that `tasks.yml` conforms to the schema defined in its `jsonschema` block.'
    acceptance_criteria:
      - 'The CI pipeline fails if `tasks.yml` has syntax errors or does not conform to its own schema.'
      - 'This provides an automated safety net against malformed task definitions.'
    assigned_to: 'codex-agent'
    epic: 'Phase 4: Process Hardening & Agent Bus'

  - id: 23
    title: Dynamically Discover Content Sections in classify-inbox.mjs
    description: The `classify-inbox.mjs` script uses a hardcoded array of section names. This means that if a new content directory (e.g., `content/projects/`) is added, the script must be manually updated. This task refactors the script to discover these sections dynamically by reading the directory structure, making the system more maintainable and extensible.
    component: Automation Scripts
    dependencies: [6]
    priority: 3
    status: done
    command: null
    task_id: PIN-REF-2
    area: Maintainability
    actionable_steps:
      - In `classify-inbox.mjs`, replace the static `SECTIONS` array with a function that reads the directories in `content/`.
      - Filter out non-content directories like `inbox`, `untagged`, and any others that are not valid classification targets.
      - Pass the dynamically generated list of sections into the `buildPrompt` function.
    acceptance_criteria:
      - The script automatically uses any new directory added to `content/` as a valid classification target.
      - The hardcoded `SECTIONS` array is removed from the script.
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'
  - id: 24
    title: Unit Tests for build-insights.mjs
    description: The `build-insights.mjs` script, once implemented, will contain critical logic for summarizing content with an LLM. This task adds a dedicated unit test suite to ensure this logic is correct, handles errors, and can be refactored safely in the future.
    component: Testing
    dependencies: [18]
    priority: 4
    status: done
    command: npm test
    task_id: PIN-QA-8
    area: Testing
    actionable_steps:
      - Create a new test file `test/build-insights.test.mjs`.
      - Mock the OpenAI API and `fs` modules to simulate reading content and receiving LLM summaries.
      - Write tests to verify that changed files are correctly identified and that insight files are generated with the expected content.
      - Test edge cases, such as API failures or empty content.
    acceptance_criteria:
      - Test coverage for `build-insights.mjs` reaches 80% or higher.
      - The new tests are integrated into the CI pipeline and pass successfully.
    assigned_to: codex-agent
    epic: 'Phase 3: LLM Integration'
  - id: 25
    title: Enable Dependabot for Automated Dependency Updates
    description: To improve security and maintainability, this task involves setting up Dependabot to automatically scan for outdated npm dependencies and create pull requests to update them. This ensures the project does not fall behind on important security patches and package updates.
    component: CI/CD
    dependencies: [3]
    priority: 3
    status: done
    command: null
    task_id: PIN-SEC-2
    area: Security
    actionable_steps:
      - Create a `.github/dependabot.yml` configuration file.
      - Configure it to check the npm ecosystem on a weekly schedule.
      - Set it to target the `main` branch and assign a reviewer (e.g., `@adrianwedd`).
    acceptance_criteria:
      - A `dependabot.yml` file is present in the `.github` directory.
      - Dependabot is active and will create PRs for outdated dependencies.
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'
  - id: 26
    title: Configure Site URL in astro.config.mjs
    description: The `astro.config.mjs` file is missing the recommended `site` property. Setting this property is crucial for SEO, generating correct canonical URLs, and ensuring sitemaps are built correctly. This task adds the production URL to the configuration.
    component: Core Infrastructure
    dependencies: [2]
    priority: 4
    status: done
    command: npm run build
    task_id: PIN-CFG-1
    area: Configuration
    actionable_steps:
      - Read the `CNAME` file to determine the production hostname.
      - Edit `astro.config.mjs` and add a `site` property to the exported configuration object.
      - The value should be the full URL, e.g., `https://github.adrianwedd.com`.
    acceptance_criteria:
      - The `astro.config.mjs` file contains a `site` property with the correct production URL.
      - The Astro build completes successfully with the new configuration.
    assigned_to: 'codex-agent'
    epic: 'Phase 1: Bootstrap'
  - id: 28
    title: 'Static Search Index'
    description: 'Generate a Lunr.js index for all markdown content and integrate a search component.'
    component: 'Front-End'
    dependencies: [5]
    priority: 3
    status: done
    command: null
    task_id: 'PIN-UI-3'
    area: UI
    actionable_steps:
      - 'Add Lunr.js dependency.'
      - 'Create build-search-index.mjs to output search-index.json.'
      - 'Integrate Search.astro component.'
    acceptance_criteria:
      - 'Script outputs `public/search-index.json`.'
      - 'Users can search without a backend.'
    assigned_to: codex-agent
    epic: 'Phase 5: UI Expansion'

  - id: 29
    title: 'RSS Feed Generation'
    description: 'Produce an RSS feed from markdown metadata for subscribers.'
    component: 'Automation'
    dependencies: [5]
    priority: 3
    status: done
    command: null
    task_id: 'PIN-AUTO-4'
    area: Deployment
    actionable_steps:
      - 'Create build-rss.mjs to output rss.xml.'
      - 'Add script invocation to deploy workflow before publishing.'
      - 'Link the feed in site navigation.'
    acceptance_criteria:
      - 'Workflow writes `public/rss-xml`.'
      - 'Site exposes an RSS link.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 30
    title: 'Add File System Error Handling to `fetch-gh-repos.mjs`'
    description: 'Enhance the robustness of `fetch-gh-repos.mjs` by adding `try...catch` blocks around file system operations (`fs.readdir`, `fs.mkdir`, `fs.writeFile`) to gracefully handle potential I/O errors.'
    component: 'Automation Scripts'
    dependencies: []
    priority: 4
    status: done
    command: null
    task_id: 'PIN-ROBUST-2'
    area: Robustness
    actionable_steps:
      - 'Wrap `fs.readdir`, `fs.mkdir`, and `fs.writeFile` calls in `try...catch` blocks.'
      - 'Log errors using `console.error` or a new centralized logging utility.'
      - 'Consider appropriate fallback or exit strategies for critical errors.'
    acceptance_criteria:
      - 'File system operations in `fetch-gh-repos.mjs` are resilient to I/O errors.'
      - 'Errors are logged, providing clear diagnostic information.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 31
    title: 'Add File System Error Handling to `classify-inbox.mjs`'
    description: 'Improve the resilience of `classify-inbox.mjs` by implementing `try...catch` blocks around file system operations (`fs.readdir`, `fs.readFile`, `fs.mkdir`, `fs.rename`, `fs.writeFile`) to manage I/O errors effectively.'
    component: 'Automation Scripts'
    dependencies: []
    priority: 4
    status: pending
    command: null
    task_id: 'PIN-ROBUST-3'
    area: Robustness
    actionable_steps:
      - 'Wrap `fs.readdir`, `fs.readFile`, `fs.mkdir`, `fs.rename`, and `fs.writeFile` calls in `try...catch` blocks.'
      - 'Log errors using `console.error` or a new centralized logging utility.'
      - 'Ensure that file operations failing do not crash the script.'
    acceptance_criteria:
      - '`classify-inbox.mjs` handles file system errors gracefully.'
      - 'Errors are logged, and the script continues processing other files where possible.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 32
    title: 'Add File System Error Handling to `build-insights.mjs`'
    description: 'Enhance the robustness of `build-insights.mjs` by adding `try...catch` blocks around file system operations (`fs.readdir`, `fs.readFile`, `fs.writeFile`) to handle I/O errors.'
    component: 'Automation Scripts'
    dependencies: []
    priority: 4
    status: done
    command: null
    task_id: 'PIN-ROBUST-4'
    area: Robustness
    actionable_steps:
      - 'Wrap `fs.readdir`, `fs.readFile`, and `fs.writeFile` calls in `try...catch` blocks.'
      - 'Log errors using `console.error` or a new centralized logging utility.'
      - 'Ensure that file operations failing do not prevent other insights from being built.'
    acceptance_criteria:
      - '`build-insights.mjs` is resilient to file system errors.'
      - 'Errors are logged, and the script attempts to process other files.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 33
    title: 'Add File System Error Handling to `agent-bus.mjs`'
    description: 'Improve the reliability of `agent-bus.mjs` by adding `try...catch` blocks around file system operations (`fs.readdir`, `fs.readFile`) to handle potential I/O errors.'
    component: 'Automation Scripts'
    dependencies: []
    priority: 4
    status: done
    command: null
    task_id: 'PIN-ROBUST-5'
    area: Robustness
    actionable_steps:
      - 'Wrap `fs.readdir` and `fs.readFile` calls in `try...catch` blocks.'
      - 'Log errors using `console.error` or a new centralized logging utility.'
      - 'Ensure the script can still attempt to update the GitHub Issue even if some manifest files are unreadable.'
    acceptance_criteria:
      - '`agent-bus.mjs` handles file system errors gracefully.'
      - 'Errors are logged, and the script attempts to process other manifests.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 34
    title: 'Implement Centralized Logging Utility'
    description: 'Create a shared utility module for centralized logging across all Node.js automation scripts, allowing for consistent error reporting and easier debugging.'
    component: 'Core Infrastructure'
    dependencies: []
    priority: 3
    status: pending
    command: null
    task_id: 'PIN-MAINT-1'
    area: Maintainability
    actionable_steps:
      - 'Create `scripts/utils/logger.mjs`.'
      - 'Implement functions for different log levels (e.g., `log.info`, `log.warn`, `log.error`).'
      - 'Replace existing `console.log` and `console.error` calls in automation scripts with the new logging utility.'
    acceptance_criteria:
      - 'A `logger.mjs` utility exists and is used by all automation scripts.'
      - 'Log messages are consistently formatted.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 35
    title: 'Create Shared File System Utility Module'
    description: 'Extract common file system operations (`fs.readdir`, `fs.readFile`, `fs.writeFile`, `fs.mkdir`, `fs.rename`) into a shared utility module to reduce code duplication and improve maintainability across automation scripts.'
    component: 'Automation Scripts'
    dependencies: [30, 31, 32, 33, 34]
    priority: 3
    status: pending
    command: null
    task_id: 'PIN-REF-3'
    area: Refactoring
    actionable_steps:
      - 'Create `scripts/utils/file-utils.mjs`.'
      - 'Move common `fs` operations into functions within `file-utils.mjs`, incorporating error handling and logging.'
      - 'Update `fetch-gh-repos.mjs`, `classify-inbox.mjs`, `build-insights.mjs`, and `agent-bus.mjs` to use the new utility.'
    acceptance_criteria:
      - '`file-utils.mjs` exists and is used by all relevant scripts.'
      - 'Code duplication for file system operations is significantly reduced.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 36
    title: 'Refactor LLM API Calls into Dedicated Utility'
    description: "Consolidate LLM API interaction logic (currently in `classify-inbox.mjs`'s `callOpenAI` function) into a dedicated `llm-api.mjs` utility to prepare for potential future LLM integrations and improve modularity."
    component: 'Automation Scripts'
    dependencies: []
    priority: 3
    status: pending
    command: null
    task_id: 'PIN-REF-4'
    area: Refactoring
    actionable_steps:
      - 'Create `scripts/utils/llm-api.mjs`.'
      - "Move `callOpenAI` (and potentially `buildSummaryPrompt` if it's generic enough) into `llm-api.mjs`."
      - 'Update `classify-inbox.mjs` and `build-insights.mjs` to import and use the new utility.'
    acceptance_criteria:
      - '`llm-api.mjs` exists and encapsulates LLM API logic.'
      - 'Scripts use the new utility for LLM interactions.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 37
    title: 'Improve Readability of Markdown Table Generation in `agent-bus.mjs`'
    description: 'Refactor the `manifestsToMarkdown` function in `agent-bus.mjs` to improve the readability of the markdown table header generation, potentially using template literals or an array join.'
    component: 'Automation Scripts'
    dependencies: []
    priority: 2
    status: pending
    command: null
    task_id: 'PIN-MAINT-2'
    area: Maintainability
    actionable_steps:
      - 'Modify the `md` variable assignment in `manifestsToMarkdown` to use a more readable string construction method.'
    acceptance_criteria:
      - 'The markdown table header generation is clearer and easier to understand.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 38
    title: 'Increase Unit Test Coverage for `agent-bus.mjs`'
    description: 'Write additional unit tests for `agent-bus.mjs` to improve its test coverage, focusing on edge cases and ensuring all functions are adequately tested.'
    component: 'Testing'
    dependencies: [27]
    priority: 4
    status: pending
    command: null
    task_id: 'PIN-QA-10'
    area: Testing
    actionable_steps:
      - 'Analyze current coverage report for `agent-bus.mjs`.'
      - 'Write new tests to cover uncovered lines, branches, and functions.'
      - 'Ensure mocks are comprehensive for GitHub API and file system interactions.'
    acceptance_criteria:
      - 'Test coverage for `agent-bus.mjs` reaches at least 80%.'
      - 'All new tests pass.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 39
    title: 'Increase Unit Test Coverage for `build-insights.mjs`'
    description: 'Write additional unit tests for `build-insights.mjs` to improve its test coverage, focusing on edge cases and ensuring all functions are adequately tested.'
    component: 'Testing'
    dependencies: [24]
    priority: 4
    status: pending
    command: null
    task_id: 'PIN-QA-11'
    area: Testing
    actionable_steps:
      - 'Analyze current coverage report for `build-insights.mjs`.'
      - 'Write new tests to cover uncovered lines, branches, and functions.'
      - 'Ensure mocks are comprehensive for LLM API and file system interactions.'
    acceptance_criteria:
      - 'Test coverage for `build-insights.mjs` reaches at least 80%.'
      - 'All new tests pass.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 40
    title: 'Increase Unit Test Coverage for `classify-inbox.mjs`'
    description: 'Write additional unit tests for `classify-inbox.mjs` to improve its test coverage, focusing on edge cases and ensuring all functions are adequately tested.'
    component: 'Testing'
    dependencies: []
    priority: 3
    status: pending
    command: null
    task_id: 'PIN-QA-12'
    area: Testing
    actionable_steps:
      - 'Analyze current coverage report for `classify-inbox.mjs`.'
      - 'Write new tests to cover uncovered lines, branches, and functions.'
      - 'Ensure mocks are comprehensive for LLM API and file system interactions.'
    acceptance_criteria:
      - 'Test coverage for `classify-inbox.mjs` reaches at least 90%.'
      - 'All new tests pass.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 41
    title: 'Increase Unit Test Coverage for `fetch-gh-repos.mjs`'
    description: 'Write additional unit tests for `fetch-gh-repos.mjs` to improve its test coverage, focusing on edge cases and ensuring all functions are adequately tested.'
    component: 'Testing'
    dependencies: []
    priority: 3
    status: pending
    command: null
    task_id: 'PIN-QA-13'
    area: Testing
    actionable_steps:
      - 'Analyze current coverage report for `fetch-gh-repos.mjs`.'
      - 'Write new tests to cover uncovered lines, branches, and functions.'
      - 'Ensure mocks are comprehensive for GitHub API and file system interactions.'
    acceptance_criteria:
      - 'Test coverage for `fetch-gh-repos.mjs` reaches at least 90%.'
      - 'All new tests pass.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 42
    title: 'Expand Integration Tests to Cover Error Scenarios'
    description: 'Enhance the existing integration test suite (`test/integration.test.mjs`) to include scenarios where external API calls (GitHub, LLM) fail or return unexpected data, ensuring the pipeline handles these gracefully.'
    component: 'Testing'
    dependencies: [19]
    priority: 4
    status: pending
    command: null
    task_id: 'PIN-QA-14'
    area: Testing
    actionable_steps:
      - 'Add test cases to `test/integration.test.mjs` that mock failed GitHub API responses.'
      - 'Add test cases that mock failed LLM API responses or malformed LLM output.'
      - 'Verify that the pipeline logs errors and handles them without crashing.'
    acceptance_criteria:
      - 'Integration tests cover various error conditions for external dependencies.'
      - 'The pipeline demonstrates resilience to external service failures.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 43
    title: 'Implement Content Sanitization for Markdown Files'
    description: 'Add a sanitization step for markdown content, especially files processed by LLMs, to prevent potential injection attacks if the content is rendered directly on the static site without proper escaping.'
    component: 'Security'
    dependencies: []
    priority: 5
    status: pending
    command: null
    task_id: 'PIN-SEC-3'
    area: Security
    actionable_steps:
      - 'Identify appropriate sanitization library (e.g., `dompurify` if used in browser, or a server-side markdown sanitizer).'
      - 'Integrate the sanitization step into `classify-inbox.mjs` or `build-insights.mjs` before content is written to the `content/` directory.'
      - 'Consider adding a sanitization step to the Astro build process if content is directly embedded.'
    acceptance_criteria:
      - 'Markdown content is sanitized to remove potentially malicious scripts or tags.'
      - 'The static site remains secure against content injection.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 44
    title: 'Add Detailed Code Comments for Complex Logic'
    description: 'Review all Node.js automation scripts and add more detailed code comments, especially for complex functions, non-obvious logic, or areas that might be difficult for new contributors to understand.'
    component: 'Documentation'
    dependencies: []
    priority: 2
    status: pending
    command: null
    task_id: 'PIN-DOC-1'
    area: Documentation
    actionable_steps:
      - 'Go through each function in `scripts/*.mjs` and `scripts/utils/*.mjs`.'
      - 'Add comments explaining the purpose, parameters, and return values of functions.'
      - 'Explain any complex algorithms or design decisions.'
    acceptance_criteria:
      - 'Automation scripts are well-commented, improving code readability and maintainability.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'

  - id: 45
    title: 'Create `CONTRIBUTING.md` Guide'
    description: 'Develop a `CONTRIBUTING.md` guide to provide clear instructions for new developers or AI agents on how to contribute to the project, including setup, coding standards, testing, and pull request guidelines.'
    component: 'Documentation'
    dependencies: []
    priority: 3
    status: pending
    command: null
    task_id: 'PIN-DOC-2'
    area: Documentation
    actionable_steps:
      - 'Create `CONTRIBUTING.md` in the root directory.'
      - 'Include sections on: project setup, running tests, linting/formatting, adding new features, submitting pull requests.'
      - 'Reference existing documentation (`README.md`, `PLAN.md`, `AGENTS.md`).'
    acceptance_criteria:
      - 'A comprehensive `CONTRIBUTING.md` file exists.'
      - 'New contributors can easily understand how to get started and contribute.'
    assigned_to: human-operator
    epic: 'Phase 6: Iterative Growth'

  - id: 46
    title: 'Investigate build-insights.mjs Test Failures'
    description: 'Investigate and fix the intermittent test failures for `build-insights.mjs`.'
    component: 'Testing'
    dependencies: [32]
    priority: 5
    status: pending
    command: 'npm test'
    task_id: 'PIN-QA-15'
    area: QA
    actionable_steps:
      - 'Analyze test logs and code to identify root cause of failures.'
      - 'Reproduce failures consistently.'
      - 'Implement fixes in test or source code.'
      - 'Ensure 100% test pass rate for `build-insights.mjs`.'
    acceptance_criteria:
      - 'All tests for `build-insights.mjs` pass consistently.'
      - 'Test coverage for `build-insights.mjs` is maintained or improved.'
    assigned_to: codex-agent
    epic: 'Phase 6: Iterative Growth'
